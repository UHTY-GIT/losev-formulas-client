{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { inject } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useVuelidate } from \"@vuelidate/core\";\nimport { email, required, minLength } from \"@vuelidate/validators\";\nexport default {\n  name: 'LoginForm',\n  setup() {\n    const $v = useVuelidate();\n    const submitHandler = () => {\n      if ($v.value.$invalid) {\n        $v.value.$touch();\n        return;\n      }\n      // Зміна, якщо у вас немає `this.$router` у `setup()`. Використовуйте `useRouter()`\n      const router = useRouter();\n      router.push('/');\n    };\n    return {\n      $v,\n      submitHandler\n    };\n  },\n  data() {\n    return {\n      backgroundClass: null,\n      email: '',\n      password: ''\n    };\n  },\n  validations: {\n    email: {\n      required,\n      email\n    },\n    password: {\n      required,\n      minLength: minLength(6)\n    } // припустимо, мінімальна довжина пароля - 6 символів\n  },\n\n  created() {\n    this.backgroundClass = inject('backgroundClass');\n  },\n  methods: {\n    // submitHandler() {\n    //   if (this.$v.$invalid) {\n    //     this.$v.$touch()\n    //     return\n    //   }\n    //   this.$router.push('/')\n    // }\n  }\n};","map":{"version":3,"names":["inject","useRouter","useVuelidate","email","required","minLength","name","setup","$v","submitHandler","value","$invalid","$touch","router","push","data","backgroundClass","password","validations","created","methods"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\views\\UserLogin.vue"],"sourcesContent":["<template>\r\n  <div :class=\"backgroundClass\">\r\n    <div class=\"empty-layout\">\r\n      <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\r\n        <div class=\"card-content\">\r\n          <span class=\"card-title\">Увійти Losev Formulas</span>\r\n          <div class=\"input-field\">\r\n<!--            .trim видаляє лишні пробіли\r\n                $dirty валідація буде якщо користувач вже шось роби в у полі\r\n-->\r\n            <input\r\n                id=\"email\"\r\n                type=\"text\"\r\n                v-model.trim=\"email\"\r\n                class=\"validate\"\r\n                :class=\"{invalid: ($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\r\n                @input=\"console.log($v.email)\"\r\n            >\r\n            <label for=\"email\">E-mail</label>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-if=\"$v.email.$dirty && !$v.email.required\"\r\n            >Поле E-mail не може бути пустим</small>\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                class=\"validate\"\r\n            >\r\n            <label for=\"password\">Пароль</label>\r\n            <small class=\"helper-text invalid\">Password</small>\r\n            <i class=\"toggle-password fas fa-eye-slash\" onclick=\"togglePassword()\"></i>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-action\">\r\n          <div class=\"butt_login\">\r\n            <button\r\n                class=\"btn waves-effect waves-light auth-submit\"\r\n                type=\"submit\"\r\n            >\r\n              Увійти\r\n            </button>\r\n          </div>\r\n\r\n          <p class=\"center under_butt_auth\">\r\n            Немає аккаунту?\r\n            <router-link to=\"/register\">Зареєстурватися</router-link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { inject } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { email, required, minLength } from \"@vuelidate/validators\";\r\n\r\nexport default {\r\n  name: 'LoginForm',\r\n  setup() {\r\n    const $v = useVuelidate();\r\n\r\n    const submitHandler = () => {\r\n      if ($v.value.$invalid) {\r\n        $v.value.$touch();\r\n        return;\r\n      }\r\n      // Зміна, якщо у вас немає `this.$router` у `setup()`. Використовуйте `useRouter()`\r\n      const router = useRouter();\r\n      router.push('/');\r\n    }\r\n\r\n    return {\r\n      $v,\r\n      submitHandler,\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      backgroundClass: null,\r\n      email: '',\r\n      password: ''\r\n    };\r\n  },\r\n\r\n  validations: {\r\n\r\n      email: { required, email },\r\n      password: { required, minLength: minLength(6) } // припустимо, мінімальна довжина пароля - 6 символів\r\n\r\n\r\n  },\r\n\r\n  created() {\r\n    this.backgroundClass = inject('backgroundClass');\r\n  },\r\n\r\n  methods: {\r\n    // submitHandler() {\r\n    //   if (this.$v.$invalid) {\r\n    //     this.$v.$touch()\r\n    //     return\r\n    //   }\r\n    //   this.$router.push('/')\r\n    // }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AAwDA,SAASA,MAAK,QAAS,KAAK;AAC5B,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,YAAW,QAAS,iBAAiB;AAC9C,SAASC,KAAK,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,uBAAuB;AAElE,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,EAAC,GAAIN,YAAY,CAAC,CAAC;IAEzB,MAAMO,aAAY,GAAIA,CAAA,KAAM;MAC1B,IAAID,EAAE,CAACE,KAAK,CAACC,QAAQ,EAAE;QACrBH,EAAE,CAACE,KAAK,CAACE,MAAM,CAAC,CAAC;QACjB;MACF;MACA;MACA,MAAMC,MAAK,GAAIZ,SAAS,CAAC,CAAC;MAC1BY,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;IAClB;IAEA,OAAO;MACLN,EAAE;MACFC;IACF;EACF,CAAC;EACDM,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,IAAI;MACrBb,KAAK,EAAE,EAAE;MACTc,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EAEDC,WAAW,EAAE;IAETf,KAAK,EAAE;MAAEC,QAAQ;MAAED;IAAM,CAAC;IAC1Bc,QAAQ,EAAE;MAAEb,QAAQ;MAAEC,SAAS,EAAEA,SAAS,CAAC,CAAC;IAAE,EAAE;EAGpD,CAAC;;EAEDc,OAAOA,CAAA,EAAG;IACR,IAAI,CAACH,eAAc,GAAIhB,MAAM,CAAC,iBAAiB,CAAC;EAClD,CAAC;EAEDoB,OAAO,EAAE;IACP;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}