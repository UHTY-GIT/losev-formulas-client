{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport useVuelidate from '@vuelidate/core';\nimport { required, email, minLength } from '@vuelidate/validators';\nimport { inject } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport messages from \"@/utils/messages\";\nimport apiService from '@/services/apiService';\nexport default {\n  name: 'loginPage',\n  data() {\n    return {\n      backgroundClass: null\n    };\n  },\n  setup() {\n    const email = ref('');\n    const password = ref('');\n    const router = useRouter(); // Переміщено сюди з submitHandler\n    const v$ = useVuelidate(); // Визначено тут для спрощення\n    const submitHandler = async () => {\n      if (v$.value.$invalid) {\n        v$.value.$touch();\n        console.log(\"click to submitHandler\");\n        return;\n      }\n\n      // const formData = {\n      //   email: email.value,\n      //   password: password.value\n      // };\n      // console.log(formData);\n      //\n      // router.push('/');\n\n      const response = await apiService.loginUser(email.value, password.value);\n      console.log(response.data);\n      if (response.data && response.data.token) {\n        localStorage.setItem('token', response.data.token);\n        router.push('/');\n      }\n    };\n\n    // Реактивний стан для перевірки видимості пароля\n    const isPasswordVisible = ref(false);\n    const passwordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\n\n    // Функція переключення видимості пароля\n    const togglePassword = () => {\n      isPasswordVisible.value = !isPasswordVisible.value;\n      if (isPasswordVisible.value) {\n        passwordIconClass.value = 'fas fa-eye';\n      } else {\n        passwordIconClass.value = 'fas fa-eye-slash';\n      }\n    };\n    return {\n      v$,\n      submitHandler,\n      // Повертаємо функцію з setup\n      isPasswordVisible,\n      togglePassword,\n      passwordIconClass,\n      email,\n      password\n    };\n  },\n  validations() {\n    return {\n      email: {\n        required,\n        email\n      },\n      password: {\n        required,\n        minLength: minLength(6)\n      } // припустимо, мінімальна довжина пароля - 6 символів\n    };\n  },\n\n  created() {\n    this.backgroundClass = inject('backgroundClass');\n  },\n  mounted() {\n    //повідомлення про вихід з системи переться по ключу з get запиту\n    if (messages[this.$route.query.message]) {\n      this.$message(messages[this.$route.query.message]);\n    }\n  }\n};","map":{"version":3,"names":["ref","useVuelidate","required","email","minLength","inject","useRouter","messages","apiService","name","data","backgroundClass","setup","password","router","v$","submitHandler","value","$invalid","$touch","console","log","response","loginUser","token","localStorage","setItem","push","isPasswordVisible","passwordIconClass","togglePassword","validations","created","mounted","$route","query","message","$message"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\views\\UserLogin.vue"],"sourcesContent":["<template>\r\n  <div :class=\"backgroundClass\">\r\n    <div class=\"empty-layout\">\r\n      <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\r\n        <div class=\"card-content\">\r\n          <span class=\"card-title\">Увійти Losev Formulas</span>\r\n          <div class=\"input-field\">\r\n<!--            .trim видаляє лишні пробіли\r\n                $dirty валідація буде якщо користувач вже шось роби в у полі\r\n-->\r\n            <input\r\n                id=\"email\"\r\n                type=\"text\"\r\n                v-model.trim=\"email\"\r\n                :class=\"{\r\n                  invalid: (v$.email.$dirty && v$.email.required.$invalid) || (v$.email.$dirty && v$.email.email.$invalid),\r\n                  validate: v$.email.$dirty && !v$.email.required.$invalid && !v$.email.email.$invalid\r\n                }\"\r\n            >\r\n            <label for=\"email\">E-mail</label>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-if=\"v$.email.$dirty && v$.email.required.$invalid\"\r\n            >Поле E-mail не може бути пустим</small>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-else-if=\"v$.email.$dirty && v$.email.email.$invalid\"\r\n            >Введіть коректний E-mail</small>\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <input\r\n                id=\"password\"\r\n                :type=\"isPasswordVisible ? 'text' : 'password'\"\r\n                v-model.trim=\"password\"\r\n                :class=\"{\r\n                  invalid: (v$.password.$dirty && v$.password.required.$invalid) || (v$.password.$dirty && !v$.password.minLength.$invalid),\r\n                  validate: v$.password.$dirty && !v$.password.required.$invalid && !v$.password.minLength.$invalid\r\n                }\"\r\n            >\r\n            <label for=\"password\">Пароль</label>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-if=\"v$.password.$dirty && v$.password.required.$invalid\"\r\n            >Введіть пароль</small>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-else-if=\"v$.password.$dirty && v$.password.minLength.$invalid\"\r\n            >Пароль повинен бути {{ v$.password.minLength.$params.min }} символів. Зараз він {{password.length}}</small>\r\n            <i class=\"toggle-password\" :class=\"passwordIconClass\" @click=\"togglePassword\"></i>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-action\">\r\n          <div class=\"butt_login\">\r\n            <button\r\n                class=\"btn waves-effect waves-light auth-submit\"\r\n                type=\"submit\"\r\n            >\r\n              Увійти\r\n            </button>\r\n          </div>\r\n\r\n          <p class=\"center under_butt_auth\">\r\n            Немає аккаунту?\r\n            <router-link to=\"/register\">Зареєстурватися</router-link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport useVuelidate from '@vuelidate/core'\r\nimport { required, email, minLength } from '@vuelidate/validators'\r\nimport {inject} from \"vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport messages from \"@/utils/messages\";\r\nimport apiService from '@/services/apiService';\r\n\r\nexport default {\r\n  name: 'loginPage',\r\n  data () {\r\n    return {\r\n      backgroundClass: null,\r\n    }\r\n  },\r\n  setup () {\r\n    const email = ref('');\r\n    const password = ref('');\r\n    const router = useRouter(); // Переміщено сюди з submitHandler\r\n    const v$ = useVuelidate(); // Визначено тут для спрощення\r\n    const submitHandler = async () => {\r\n      if (v$.value.$invalid) {\r\n        v$.value.$touch();\r\n        console.log(\"click to submitHandler\")\r\n        return;\r\n      }\r\n\r\n      // const formData = {\r\n      //   email: email.value,\r\n      //   password: password.value\r\n      // };\r\n      // console.log(formData);\r\n      //\r\n      // router.push('/');\r\n\r\n      const response = await apiService.loginUser(email.value, password.value);\r\n      console.log(response.data);\r\n      if (response.data && response.data.token) {\r\n        localStorage.setItem('token', response.data.token);\r\n        router.push('/');\r\n      }\r\n    }\r\n\r\n    // Реактивний стан для перевірки видимості пароля\r\n    const isPasswordVisible = ref(false);\r\n\r\n    const passwordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\r\n\r\n    // Функція переключення видимості пароля\r\n    const togglePassword = () => {\r\n      isPasswordVisible.value = !isPasswordVisible.value;\r\n      if (isPasswordVisible.value) {\r\n        passwordIconClass.value = 'fas fa-eye';\r\n      } else {\r\n        passwordIconClass.value = 'fas fa-eye-slash';\r\n      }\r\n    }\r\n\r\n    return {\r\n      v$,\r\n      submitHandler, // Повертаємо функцію з setup\r\n      isPasswordVisible,\r\n      togglePassword,\r\n      passwordIconClass,\r\n      email,\r\n      password,\r\n    }\r\n  },\r\n  validations () {\r\n    return {\r\n      email: { required, email },\r\n      password: { required, minLength: minLength(6) } // припустимо, мінімальна довжина пароля - 6 символів\r\n    }\r\n  },\r\n  created() {\r\n    this.backgroundClass = inject('backgroundClass');\r\n  },\r\n  mounted() {\r\n    //повідомлення про вихід з системи переться по ключу з get запиту\r\n    if (messages[this.$route.query.message]) {\r\n      this.$message(messages[this.$route.query.message])\r\n    }\r\n  }\r\n}\r\n\r\n</script>"],"mappings":";AAyEA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,YAAW,MAAO,iBAAgB;AACzC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAsB;AACjE,SAAQC,MAAM,QAAO,KAAK;AAC1B,SAAQC,SAAS,QAAO,YAAY;AACpC,OAAOC,QAAO,MAAO,kBAAkB;AACvC,OAAOC,UAAS,MAAO,uBAAuB;AAE9C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,eAAe,EAAE;IACnB;EACF,CAAC;EACDC,KAAIA,CAAA,EAAK;IACP,MAAMT,KAAI,GAAIH,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMa,QAAO,GAAIb,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMc,MAAK,GAAIR,SAAS,CAAC,CAAC,EAAE;IAC5B,MAAMS,EAAC,GAAId,YAAY,CAAC,CAAC,EAAE;IAC3B,MAAMe,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAID,EAAE,CAACE,KAAK,CAACC,QAAQ,EAAE;QACrBH,EAAE,CAACE,KAAK,CAACE,MAAM,CAAC,CAAC;QACjBC,OAAO,CAACC,GAAG,CAAC,wBAAwB;QACpC;MACF;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA,MAAMC,QAAO,GAAI,MAAMd,UAAU,CAACe,SAAS,CAACpB,KAAK,CAACc,KAAK,EAAEJ,QAAQ,CAACI,KAAK,CAAC;MACxEG,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACZ,IAAI,CAAC;MAC1B,IAAIY,QAAQ,CAACZ,IAAG,IAAKY,QAAQ,CAACZ,IAAI,CAACc,KAAK,EAAE;QACxCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACZ,IAAI,CAACc,KAAK,CAAC;QAClDV,MAAM,CAACa,IAAI,CAAC,GAAG,CAAC;MAClB;IACF;;IAEA;IACA,MAAMC,iBAAgB,GAAI5B,GAAG,CAAC,KAAK,CAAC;IAEpC,MAAM6B,iBAAgB,GAAI7B,GAAG,CAAC,kBAAkB,CAAC,EAAE;;IAEnD;IACA,MAAM8B,cAAa,GAAIA,CAAA,KAAM;MAC3BF,iBAAiB,CAACX,KAAI,GAAI,CAACW,iBAAiB,CAACX,KAAK;MAClD,IAAIW,iBAAiB,CAACX,KAAK,EAAE;QAC3BY,iBAAiB,CAACZ,KAAI,GAAI,YAAY;MACxC,OAAO;QACLY,iBAAiB,CAACZ,KAAI,GAAI,kBAAkB;MAC9C;IACF;IAEA,OAAO;MACLF,EAAE;MACFC,aAAa;MAAE;MACfY,iBAAiB;MACjBE,cAAc;MACdD,iBAAiB;MACjB1B,KAAK;MACLU;IACF;EACF,CAAC;EACDkB,WAAUA,CAAA,EAAK;IACb,OAAO;MACL5B,KAAK,EAAE;QAAED,QAAQ;QAAEC;MAAM,CAAC;MAC1BU,QAAQ,EAAE;QAAEX,QAAQ;QAAEE,SAAS,EAAEA,SAAS,CAAC,CAAC;MAAE,EAAE;IAClD;EACF,CAAC;;EACD4B,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrB,eAAc,GAAIN,MAAM,CAAC,iBAAiB,CAAC;EAClD,CAAC;EACD4B,OAAOA,CAAA,EAAG;IACR;IACA,IAAI1B,QAAQ,CAAC,IAAI,CAAC2B,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC,EAAE;MACvC,IAAI,CAACC,QAAQ,CAAC9B,QAAQ,CAAC,IAAI,CAAC2B,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC;IACnD;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}