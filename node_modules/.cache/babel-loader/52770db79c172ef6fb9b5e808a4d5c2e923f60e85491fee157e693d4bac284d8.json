{"ast":null,"code":"import apiService from '@/services/apiService.js';\nexport default {\n  name: \"AllPodcastPage\",\n  data() {\n    return {\n      podcasts: [],\n      loading: false,\n      dropdowns: {\n        name: false,\n        filterPrice: false\n      },\n      sortType: 'default',\n      allcategories: [],\n      selectedFilterPrice: 'Всі подкасти',\n      sortDisplayNames: {\n        'default': 'За замовчуванням',\n        'title': 'За назвою',\n        'rating': 'За популярністю'\n      },\n      initialPodcasts: []\n    };\n  },\n  methods: {\n    // Метод для анімації кнопки лайку на блоці постів\n    handleHeartButtonClick(podcast, event) {\n      podcast.isFavorite = !podcast.isFavorite;\n      console.log(podcast.isFavorite);\n      event.target.classList.toggle('active');\n      if (podcast.isFavorite) {\n        // Додавання до улюблених\n        const token = localStorage.getItem('token');\n        apiService.addToFavorite(token, podcast.id).then(response => {\n          console.log('Успішно додано до улюблених:', response);\n        }).catch(error => {\n          console.error('Помилка при додаванні до улюблених:', error);\n        });\n      }\n    },\n    // Метод для анімації кнопки плей у блоці підкастів\n    handlePlayButtonClick(event) {\n      let podcastBlock = event.target.closest('.positions_in_block');\n      podcastBlock.classList.toggle('active');\n      let podcastElement = event.target.closest('.podcast');\n      podcastElement.classList.toggle('active');\n      const contextElement = podcastElement.querySelector('.context');\n      contextElement.classList.toggle('reversed');\n      const PlayElement = podcastElement.querySelector('.play-button');\n      PlayElement.classList.toggle('expanded');\n      let playPath = event.target.querySelector('.play-path');\n      if (playPath) {\n        if (podcastBlock.classList.contains('active')) {\n          // Якщо відтворення, то змінюємо форму на \"pause\"\n          playPath.setAttribute('d', 'M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM224 192V320c0 17.7-14.3 32-32 32s-32-14.3-32-32V192c0-17.7 14.3-32 32-32s32 14.3 32 32zm128 0V320c0 17.7-14.3 32-32 32s-32-14.3-32-32V192c0-17.7 14.3-32 32-32s32 14.3 32 32z');\n        } else {\n          // Якщо пауза, то змінюємо форму на \"play\"\n          playPath.setAttribute('d', 'M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM188.3 147.1c-7.6 4.2-12.3 12.3-12.3 20.9V344c0 8.7 4.7 16.7 12.3 20.9s16.8 4.1 24.3-.5l144-88c7.1-4.4 11.5-12.1 11.5-20.5s-4.4-16.1-11.5-20.5l-144-88c-7.4-4.5-16.7-4.7-24.3-.5z');\n        }\n      }\n    },\n    // Метод що відкриває випадаючий список\n    async toggleDropdown(type) {\n      console.log(\"Toggle dropdown called with:\", type);\n      this.dropdowns[type] = !this.dropdowns[type];\n    },\n    // Сортування за рейтингом і назвою\n    sortPodcasts(type) {\n      this.sortType = type;\n      if (type === 'title') {\n        console.log(\"Сортування по тайтл \", type);\n        this.podcasts.sort((a, b) => a.title.localeCompare(b.title));\n      } else if (type === 'rating') {\n        console.log(\"Сортування по рейтингу \", type);\n        this.podcasts.sort((a, b) => b.rating - a.rating); // assuming higher rating is better\n      } else if (type === 'default') {\n        console.log(\"Сортування за замовчуванням\");\n        this.podcasts = JSON.parse(JSON.stringify(this.initialPodcasts));\n        this.podcasts.forEach(p => p.isVisible = true);\n      }\n    },\n    // Фільтр по цінам з категорій\n    filterByPriceType(priceType) {\n      if (priceType === 'all') {\n        this.podcasts.forEach(p => p.isVisible = true);\n        this.selectedFilterPrice = 'Всі подкасти';\n      } else if (priceType === 'free' || priceType === 'paid') {\n        this.podcasts.forEach(podcast => {\n          if (podcast.categories[0].category_type === priceType) {\n            podcast.isVisible = true;\n          } else {\n            podcast.isVisible = false;\n          }\n        });\n        this.selectedFilterPrice = priceType === 'free' ? 'Безкоштовні' : 'Платні';\n      }\n    }\n  },\n  async created() {\n    this.loading = true;\n    const token = localStorage.getItem('token');\n\n    // Отримуємо улюблені подкасти\n    const favoritePodcastsResponse = await apiService.getFavoritePodcasts(token);\n    console.log(favoritePodcastsResponse);\n    const DatafavoritePodcasts = favoritePodcastsResponse.data ? favoritePodcastsResponse.data.map(podcast => podcast.id) : [];\n    console.log(DatafavoritePodcasts);\n\n    // Отримуємо данні всіх подкастів\n    const responseAllPodcast = await apiService.AllPodcastPage();\n    //console.log(responseAllPodcast && responseAllPodcast.data && responseAllPodcast.data.data)\n\n    if (responseAllPodcast && responseAllPodcast.data && responseAllPodcast.data.data) {\n      this.podcasts = responseAllPodcast.data.data.map(podcast => {\n        return {\n          ...podcast,\n          isVisible: true,\n          isFavorite: DatafavoritePodcasts.includes(podcast.id)\n        };\n      });\n\n      // Зберігаємо первісний список\n      this.initialPodcasts = JSON.parse(JSON.stringify(this.podcasts));\n\n      // Ініціалізація методу сортування\n      this.sortPodcasts(this.sortType);\n    }\n\n    // // отримання даних всіх подкастів\n    // const responseAllPodcast = await apiService.AllPodcastPage();\n    // // this.podcasts = responseAllPodcast.data.data;\n    // this.podcasts = responseAllPodcast.data.data.map(podcast => ({ ...podcast, isVisible: true }));\n    //\n    // console.log(this.podcasts);\n\n    // Зберігаємо первісний список\n    // this.initialPodcasts = JSON.parse(JSON.stringify(responseAllPodcast.data.data));\n    //\n    //\n    // // Ініціалізація методу сортування\n    // this.sortPodcasts(this.sortType);\n  }\n};","map":{"version":3,"names":["apiService","name","data","podcasts","loading","dropdowns","filterPrice","sortType","allcategories","selectedFilterPrice","sortDisplayNames","initialPodcasts","methods","handleHeartButtonClick","podcast","event","isFavorite","console","log","target","classList","toggle","token","localStorage","getItem","addToFavorite","id","then","response","catch","error","handlePlayButtonClick","podcastBlock","closest","podcastElement","contextElement","querySelector","PlayElement","playPath","contains","setAttribute","toggleDropdown","type","sortPodcasts","sort","a","b","title","localeCompare","rating","JSON","parse","stringify","forEach","p","isVisible","filterByPriceType","priceType","categories","category_type","created","favoritePodcastsResponse","getFavoritePodcasts","DatafavoritePodcasts","map","responseAllPodcast","AllPodcastPage","includes"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\views\\AllPodcast.vue"],"sourcesContent":["<template>\r\n  <div class=\"page_title\">\r\n    <p>\r\n      Всі подкасти\r\n    </p>\r\n  </div>\r\n  <div class=\"all-podcast-block\">\r\n    <div class=\"dropdown-container\">\r\n      <div class=\"dropdown\">\r\n        <span>Сортування:</span>\r\n        <div class=\"selected-item-name\" @click=\"toggleDropdown('name')\">\r\n          <span>{{ sortDisplayNames[sortType] }}</span>\r\n          <a :class=\"['arrow-icon', { 'open': dropdowns.name }]\">\r\n            <span class=\"left-bar\"></span>\r\n            <span class=\"right-bar\"></span>\r\n\t\t\t\t\t</a>\r\n        </div>\r\n        <div class=\"dropdown-content\" v-show=\"dropdowns.name\">\r\n          <a href=\"#\" @click=\"sortPodcasts('default')\">За замовчуванням</a>\r\n          <a href=\"#\" @click=\"sortPodcasts('title')\">За назвою</a>\r\n          <a href=\"#\" @click=\"sortPodcasts('rating')\">За популярністю</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"dropdown\">\r\n        <span>Фільтр:</span>\r\n        <div class=\"selected-item-category\" @click=\"toggleDropdown('filterPrice')\">\r\n          <span class=\"selected-item-filter\">{{ selectedFilterPrice }}</span>\r\n          <a :class=\"['arrow-icon', { 'open': dropdowns.filterPrice }]\">\r\n            <span class=\"left-bar\"></span>\r\n            <span class=\"right-bar\"></span>\r\n          </a>\r\n        </div>\r\n        <div class=\"dropdown-content dropdown-filter\" v-show=\"dropdowns.filterPrice\">\r\n          <a href=\"#\" @click=\"filterByPriceType('all')\">Всі подкасти</a>\r\n          <a href=\"#\" @click=\"filterByPriceType('free')\">Безкоштовні</a>\r\n          <a href=\"#\" @click=\"filterByPriceType('paid')\">Платні</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"block_content_podcast\">\r\n      <div\r\n          v-for=\"podcast in podcasts\"\r\n          :key=\"podcast.id\"\r\n          :class=\"['podcast', `id_${podcast.id}`]\"\r\n          :style=\"{ backgroundImage: `url(${podcast.image_url})`, backgroundRepeat: 'no-repeat', backgroundPosition: 'center' }\"\r\n          v-show=\"podcast.isVisible\"\r\n      >\r\n        <div class=\"positions_in_block\">\r\n          <div class=\"upper_tittle\">\r\n            <div class=\"context\">\r\n              <button class=\"play-button\" aria-label=\"Play podcast\" @click=\"handlePlayButtonClick\">\r\n                <svg class=\"play-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\">\r\n                  <path class=\"play-path\" d=\"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM188.3 147.1c-7.6 4.2-12.3 12.3-12.3 20.9V344c0 8.7 4.7 16.7 12.3 20.9s16.8 4.1 24.3-.5l144-88c7.1-4.4 11.5-12.1 11.5-20.5s-4.4-16.1-11.5-20.5l-144-88c-7.4-4.5-16.7-4.7-24.3-.5z\"/>\r\n                </svg>\r\n              </button>\r\n              <div class=\"info_podcast\">\r\n                  <span class=\"title_podcast\">\r\n                    {{ podcast.title }}\r\n                  </span>\r\n                <span class=\"author_podcast\">\r\n                    {{ podcast.author }}\r\n                  </span>\r\n              </div>\r\n            </div>\r\n            <span class=\"time_podcast\">\r\n                55:15\r\n              </span>\r\n          </div>\r\n          <div class=\"under_title\">\r\n            <div class=\"rating_and_categories\">\r\n              <div class=\"podcast-rating\">{{ podcast.rating }}</div>\r\n              <span class=\"categories_podcast\">{{ podcast.categories[0].name }}</span>\r\n            </div>\r\n            <button\r\n                :class=\"['heart-button', podcast.isFavorite ? 'active' : '']\"\r\n                aria-label=\"favorite\"\r\n                @click=\"handleHeartButtonClick(podcast, $event)\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiService from '@/services/apiService.js';\r\n\r\nexport default {\r\n  name: \"AllPodcastPage\",\r\n  data() {\r\n    return {\r\n      podcasts: [],\r\n      loading: false,\r\n      dropdowns: {\r\n        name: false,\r\n        filterPrice: false\r\n      },\r\n      sortType: 'default',\r\n      allcategories: [],\r\n      selectedFilterPrice: 'Всі подкасти',\r\n      sortDisplayNames: {\r\n        'default': 'За замовчуванням',\r\n        'title': 'За назвою',\r\n        'rating': 'За популярністю'\r\n      },\r\n      initialPodcasts: []\r\n    };\r\n  },\r\n  methods: {\r\n    // Метод для анімації кнопки лайку на блоці постів\r\n    handleHeartButtonClick(podcast, event) {\r\n      podcast.isFavorite = !podcast.isFavorite;\r\n      console.log(podcast.isFavorite);\r\n      event.target.classList.toggle('active');\r\n\r\n      if (podcast.isFavorite) {\r\n        // Додавання до улюблених\r\n        const token = localStorage.getItem('token');\r\n        apiService.addToFavorite(token, podcast.id)\r\n            .then(response => {\r\n              console.log('Успішно додано до улюблених:', response);\r\n            })\r\n            .catch(error => {\r\n              console.error('Помилка при додаванні до улюблених:', error);\r\n            });\r\n      }\r\n    },\r\n\r\n    // Метод для анімації кнопки плей у блоці підкастів\r\n    handlePlayButtonClick(event) {\r\n      let podcastBlock = event.target.closest('.positions_in_block');\r\n      podcastBlock.classList.toggle('active');\r\n\r\n      let podcastElement = event.target.closest('.podcast');\r\n      podcastElement.classList.toggle('active');\r\n\r\n      const contextElement = podcastElement.querySelector('.context');\r\n      contextElement.classList.toggle('reversed');\r\n\r\n      const PlayElement = podcastElement.querySelector('.play-button');\r\n      PlayElement.classList.toggle('expanded');\r\n\r\n      let playPath = event.target.querySelector('.play-path');\r\n      if (playPath) {\r\n        if (podcastBlock.classList.contains('active')) {\r\n          // Якщо відтворення, то змінюємо форму на \"pause\"\r\n          playPath.setAttribute('d', 'M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM224 192V320c0 17.7-14.3 32-32 32s-32-14.3-32-32V192c0-17.7 14.3-32 32-32s32 14.3 32 32zm128 0V320c0 17.7-14.3 32-32 32s-32-14.3-32-32V192c0-17.7 14.3-32 32-32s32 14.3 32 32z');\r\n        } else {\r\n          // Якщо пауза, то змінюємо форму на \"play\"\r\n          playPath.setAttribute('d', 'M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM188.3 147.1c-7.6 4.2-12.3 12.3-12.3 20.9V344c0 8.7 4.7 16.7 12.3 20.9s16.8 4.1 24.3-.5l144-88c7.1-4.4 11.5-12.1 11.5-20.5s-4.4-16.1-11.5-20.5l-144-88c-7.4-4.5-16.7-4.7-24.3-.5z');\r\n        }\r\n      }\r\n    },\r\n\r\n    // Метод що відкриває випадаючий список\r\n    async toggleDropdown(type) {\r\n      console.log(\"Toggle dropdown called with:\", type);\r\n      this.dropdowns[type] = !this.dropdowns[type];\r\n    },\r\n    // Сортування за рейтингом і назвою\r\n    sortPodcasts(type) {\r\n      this.sortType = type;\r\n      if (type === 'title') {\r\n        console.log(\"Сортування по тайтл \", type);\r\n        this.podcasts.sort((a, b) => a.title.localeCompare(b.title));\r\n      } else if (type === 'rating') {\r\n        console.log(\"Сортування по рейтингу \", type);\r\n        this.podcasts.sort((a, b) => b.rating - a.rating);  // assuming higher rating is better\r\n      } else if (type === 'default') {\r\n        console.log(\"Сортування за замовчуванням\");\r\n        this.podcasts = JSON.parse(JSON.stringify(this.initialPodcasts));\r\n        this.podcasts.forEach(p => p.isVisible = true);\r\n      }\r\n    },\r\n    // Фільтр по цінам з категорій\r\n    filterByPriceType(priceType) {\r\n      if (priceType === 'all') {\r\n        this.podcasts.forEach(p => p.isVisible = true);\r\n        this.selectedFilterPrice = 'Всі подкасти';\r\n      } else if (priceType === 'free' || priceType === 'paid') {\r\n        this.podcasts.forEach(podcast => {\r\n          if (podcast.categories[0].category_type === priceType) {\r\n            podcast.isVisible = true;\r\n          } else {\r\n            podcast.isVisible = false;\r\n          }\r\n        });\r\n        this.selectedFilterPrice = priceType === 'free' ? 'Безкоштовні' : 'Платні';\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    this.loading = true;\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    // Отримуємо улюблені подкасти\r\n    const favoritePodcastsResponse = await apiService.getFavoritePodcasts(token);\r\n    console.log(favoritePodcastsResponse);\r\n    const DatafavoritePodcasts = favoritePodcastsResponse.data ? favoritePodcastsResponse.data.map(podcast => podcast.id) : [];\r\n    console.log(DatafavoritePodcasts);\r\n\r\n    // Отримуємо данні всіх подкастів\r\n    const responseAllPodcast = await apiService.AllPodcastPage();\r\n    //console.log(responseAllPodcast && responseAllPodcast.data && responseAllPodcast.data.data)\r\n\r\n    if(responseAllPodcast && responseAllPodcast.data && responseAllPodcast.data.data) {\r\n      this.podcasts = responseAllPodcast.data.data.map(podcast => {\r\n        return {\r\n          ...podcast,\r\n          isVisible: true,\r\n          isFavorite: DatafavoritePodcasts.includes(podcast.id)\r\n        };\r\n      });\r\n\r\n      // Зберігаємо первісний список\r\n      this.initialPodcasts = JSON.parse(JSON.stringify(this.podcasts));\r\n\r\n      // Ініціалізація методу сортування\r\n      this.sortPodcasts(this.sortType);\r\n    }\r\n\r\n\r\n\r\n    // // отримання даних всіх подкастів\r\n    // const responseAllPodcast = await apiService.AllPodcastPage();\r\n    // // this.podcasts = responseAllPodcast.data.data;\r\n    // this.podcasts = responseAllPodcast.data.data.map(podcast => ({ ...podcast, isVisible: true }));\r\n    //\r\n    // console.log(this.podcasts);\r\n\r\n    // Зберігаємо первісний список\r\n    // this.initialPodcasts = JSON.parse(JSON.stringify(responseAllPodcast.data.data));\r\n    //\r\n    //\r\n    // // Ініціалізація методу сортування\r\n    // this.sortPodcasts(this.sortType);\r\n  }\r\n}\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}