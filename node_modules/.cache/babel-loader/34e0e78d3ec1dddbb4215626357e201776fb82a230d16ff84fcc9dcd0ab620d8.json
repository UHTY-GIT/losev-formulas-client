{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { inject } from 'vue';\nimport useVuelidate from '@vuelidate/core';\nimport { required, email, minLength } from '@vuelidate/validators';\nimport { useRouter } from \"vue-router\";\nimport apiService from '@/services/apiService';\nexport default {\n  name: 'RegisterPage',\n  data() {\n    return {\n      backgroundClass: null\n    };\n  },\n  setup() {\n    const email = ref('');\n    const password = ref('');\n    const name = ref(''); // Реактивний стан для імені користувача\n\n    const router = useRouter(); // Переміщено сюди з submitHandler\n    const v$ = useVuelidate(); // Визначено тут для спрощення\n    const submitHandler = async () => {\n      if (v$.value.$invalid) {\n        v$.value.$touch();\n        console.log(\"click to submitHandler\");\n        return;\n      }\n      const formData = {\n        email: email.value,\n        password: password.value,\n        name: name.value // Додайте ім'я користувача в дані форми\n      };\n\n      console.log(formData);\n      const response = await apiService.registerUser(formData.email, formData.password, formData.name);\n      if (response.data.success) {\n        router.push('/'); // Перенаправляємо користувача на головну сторінку після успішної реєстрації\n      } else {\n        console.log(\"Реєстрація не вдалася\");\n      }\n    };\n\n    // Реактивний стан для перевірки видимості пароля\n    const isPasswordVisible = ref(false);\n    const passwordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\n\n    // Функція переключення видимості пароля\n    const togglePassword = () => {\n      isPasswordVisible.value = !isPasswordVisible.value;\n      if (isPasswordVisible.value) {\n        passwordIconClass.value = 'fas fa-eye';\n      } else {\n        passwordIconClass.value = 'fas fa-eye-slash';\n      }\n    };\n    return {\n      v$,\n      submitHandler,\n      // Повертаємо функцію з setup\n      isPasswordVisible,\n      togglePassword,\n      passwordIconClass\n    };\n  },\n  validations() {\n    return {\n      email: {\n        required,\n        email\n      },\n      password: {\n        required,\n        minLength: minLength(7)\n      } // припустимо, мінімальна довжина пароля - 6 символів\n    };\n  },\n\n  created() {\n    this.backgroundClass = inject('backgroundClass');\n  }\n};","map":{"version":3,"names":["ref","inject","useVuelidate","required","email","minLength","useRouter","apiService","name","data","backgroundClass","setup","password","router","v$","submitHandler","value","$invalid","$touch","console","log","formData","response","registerUser","success","push","isPasswordVisible","passwordIconClass","togglePassword","validations","created"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\views\\UserRegister.vue"],"sourcesContent":["<template>\r\n  <div :class=\"backgroundClass\">\r\n    <div class=\"empty-layout\">\r\n      <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\r\n      <div class=\"card-content\">\r\n        <span class=\"card-title\">Реєстрація Losev Formulas</span>\r\n        <div class=\"input-field\">\r\n          <input\r\n              id=\"email\"\r\n              type=\"text\"\r\n              v-model.trim=\"email\"\r\n              :class=\"{\r\n                  invalid: (v$.email.$dirty && v$.email.required.$invalid) || (v$.email.$dirty && v$.email.email.$invalid),\r\n                  validate: v$.email.$dirty && !v$.email.required.$invalid && !v$.email.email.$invalid\r\n                }\"\r\n          >\r\n          <label for=\"email\">E-mail</label>\r\n          <small\r\n              class=\"helper-text invalid\"\r\n              v-if=\"v$.email.$dirty && v$.email.required.$invalid\"\r\n          >Поле E-mail не може бути пустим</small>\r\n          <small\r\n              class=\"helper-text invalid\"\r\n              v-else-if=\"v$.email.$dirty && v$.email.email.$invalid\"\r\n          >Введіть коректний E-mail</small>\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <input\r\n              id=\"password\"\r\n              :type=\"isPasswordVisible ? 'text' : 'password'\"\r\n              v-model.trim=\"password\"\r\n              :class=\"{\r\n                  invalid: (v$.password.$dirty && v$.password.required.$invalid) || (v$.password.$dirty && !v$.password.minLength.$invalid),\r\n                  validate: v$.password.$dirty && !v$.password.required.$invalid && !v$.password.minLength.$invalid\r\n                }\"\r\n          >\r\n          <label for=\"password\">Пароль</label>\r\n          <small\r\n              class=\"helper-text invalid\"\r\n              v-if=\"v$.password.$dirty && v$.password.required.$invalid\"\r\n          >Введіть пароль</small>\r\n          <small\r\n              class=\"helper-text invalid\"\r\n              v-else-if=\"v$.password.$dirty && v$.password.minLength.$invalid\"\r\n          >Пароль повинен бути {{ v$.password.minLength.$params.min }} символів. Зараз він {{password.length}}</small>\r\n          <i class=\"toggle-password\" :class=\"passwordIconClass\" @click=\"togglePassword\"></i>\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              class=\"validate\"\r\n          >\r\n          <label for=\"name\">Ваше ім'я</label>\r\n          <small class=\"helper-text invalid\">Name</small>\r\n        </div>\r\n        <p>\r\n          <label>\r\n            <input type=\"checkbox\" />\r\n            <span>Згода на обробку персональних даних</span>\r\n          </label>\r\n        </p>\r\n      </div>\r\n      <div class=\"card-action\">\r\n        <div class=\"butt_register\">\r\n          <button\r\n              class=\"btn waves-effect waves-light auth-submit\"\r\n              type=\"submit\"\r\n          >\r\n            Зареєструватися\r\n          </button>\r\n        </div>\r\n\r\n        <p class=\"center under_butt_auth\">\r\n          Вже є аккаунт?\r\n          <router-link to=\"/login\">Увійти</router-link>\r\n        </p>\r\n      </div>\r\n    </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { inject } from 'vue';\r\nimport useVuelidate from '@vuelidate/core'\r\nimport { required, email, minLength } from '@vuelidate/validators'\r\nimport {useRouter} from \"vue-router\";\r\nimport apiService from '@/services/apiService';\r\n\r\nexport default {\r\n  name: 'RegisterPage',\r\n  data () {\r\n    return {\r\n      backgroundClass: null,\r\n    }\r\n  },\r\n  setup () {\r\n    const email = ref('');\r\n    const password = ref('');\r\n    const name = ref(''); // Реактивний стан для імені користувача\r\n\r\n    const router = useRouter(); // Переміщено сюди з submitHandler\r\n    const v$ = useVuelidate(); // Визначено тут для спрощення\r\n    const submitHandler = async () => {\r\n      if (v$.value.$invalid) {\r\n        v$.value.$touch();\r\n        console.log(\"click to submitHandler\")\r\n        return;\r\n      }\r\n\r\n      const formData = {\r\n        email: email.value,\r\n        password: password.value,\r\n        name: name.value // Додайте ім'я користувача в дані форми\r\n      };\r\n      console.log(formData);\r\n\r\n      const response = await apiService.registerUser(formData.email, formData.password, formData.name);\r\n\r\n      if (response.data.success) {\r\n        router.push('/'); // Перенаправляємо користувача на головну сторінку після успішної реєстрації\r\n      } else {\r\n        console.log(\"Реєстрація не вдалася\");\r\n      }\r\n    }\r\n\r\n    // Реактивний стан для перевірки видимості пароля\r\n    const isPasswordVisible = ref(false);\r\n\r\n    const passwordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\r\n\r\n    // Функція переключення видимості пароля\r\n    const togglePassword = () => {\r\n      isPasswordVisible.value = !isPasswordVisible.value;\r\n      if (isPasswordVisible.value) {\r\n        passwordIconClass.value = 'fas fa-eye';\r\n      } else {\r\n        passwordIconClass.value = 'fas fa-eye-slash';\r\n      }\r\n    }\r\n    return {\r\n      v$,\r\n      submitHandler, // Повертаємо функцію з setup\r\n      isPasswordVisible,\r\n      togglePassword,\r\n      passwordIconClass\r\n    }\r\n  },\r\n  validations () {\r\n    return {\r\n      email: { required, email },\r\n      password: { required, minLength: minLength(7) } // припустимо, мінімальна довжина пароля - 6 символів\r\n    }\r\n  },\r\n  created() {\r\n    this.backgroundClass = inject('backgroundClass');\r\n  },\r\n}\r\n</script>"],"mappings":";AAoFA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,MAAK,QAAS,KAAK;AAC5B,OAAOC,YAAW,MAAO,iBAAgB;AACzC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,SAAQ,QAAS,uBAAsB;AACjE,SAAQC,SAAS,QAAO,YAAY;AACpC,OAAOC,UAAS,MAAO,uBAAuB;AAE9C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,eAAe,EAAE;IACnB;EACF,CAAC;EACDC,KAAIA,CAAA,EAAK;IACP,MAAMP,KAAI,GAAIJ,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMY,QAAO,GAAIZ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMQ,IAAG,GAAIR,GAAG,CAAC,EAAE,CAAC,EAAE;;IAEtB,MAAMa,MAAK,GAAIP,SAAS,CAAC,CAAC,EAAE;IAC5B,MAAMQ,EAAC,GAAIZ,YAAY,CAAC,CAAC,EAAE;IAC3B,MAAMa,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAID,EAAE,CAACE,KAAK,CAACC,QAAQ,EAAE;QACrBH,EAAE,CAACE,KAAK,CAACE,MAAM,CAAC,CAAC;QACjBC,OAAO,CAACC,GAAG,CAAC,wBAAwB;QACpC;MACF;MAEA,MAAMC,QAAO,GAAI;QACfjB,KAAK,EAAEA,KAAK,CAACY,KAAK;QAClBJ,QAAQ,EAAEA,QAAQ,CAACI,KAAK;QACxBR,IAAI,EAAEA,IAAI,CAACQ,KAAI,CAAE;MACnB,CAAC;;MACDG,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;MAErB,MAAMC,QAAO,GAAI,MAAMf,UAAU,CAACgB,YAAY,CAACF,QAAQ,CAACjB,KAAK,EAAEiB,QAAQ,CAACT,QAAQ,EAAES,QAAQ,CAACb,IAAI,CAAC;MAEhG,IAAIc,QAAQ,CAACb,IAAI,CAACe,OAAO,EAAE;QACzBX,MAAM,CAACY,IAAI,CAAC,GAAG,CAAC,EAAE;MACpB,OAAO;QACLN,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACtC;IACF;;IAEA;IACA,MAAMM,iBAAgB,GAAI1B,GAAG,CAAC,KAAK,CAAC;IAEpC,MAAM2B,iBAAgB,GAAI3B,GAAG,CAAC,kBAAkB,CAAC,EAAE;;IAEnD;IACA,MAAM4B,cAAa,GAAIA,CAAA,KAAM;MAC3BF,iBAAiB,CAACV,KAAI,GAAI,CAACU,iBAAiB,CAACV,KAAK;MAClD,IAAIU,iBAAiB,CAACV,KAAK,EAAE;QAC3BW,iBAAiB,CAACX,KAAI,GAAI,YAAY;MACxC,OAAO;QACLW,iBAAiB,CAACX,KAAI,GAAI,kBAAkB;MAC9C;IACF;IACA,OAAO;MACLF,EAAE;MACFC,aAAa;MAAE;MACfW,iBAAiB;MACjBE,cAAc;MACdD;IACF;EACF,CAAC;EACDE,WAAUA,CAAA,EAAK;IACb,OAAO;MACLzB,KAAK,EAAE;QAAED,QAAQ;QAAEC;MAAM,CAAC;MAC1BQ,QAAQ,EAAE;QAAET,QAAQ;QAAEE,SAAS,EAAEA,SAAS,CAAC,CAAC;MAAE,EAAE;IAClD;EACF,CAAC;;EACDyB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpB,eAAc,GAAIT,MAAM,CAAC,iBAAiB,CAAC;EAClD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}