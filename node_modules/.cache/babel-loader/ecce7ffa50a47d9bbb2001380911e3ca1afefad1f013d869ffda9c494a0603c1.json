{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelDynamic as _vModelDynamic, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"empty-layout\"\n};\nconst _hoisted_2 = {\n  class: \"card-content\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"card-title\"\n}, \"Увійти Losev Formulas\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"input-field\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"E-mail\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 0,\n  class: \"helper-text invalid\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"helper-text invalid\"\n};\nconst _hoisted_8 = {\n  class: \"input-field\"\n};\nconst _hoisted_9 = [\"type\"];\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Пароль\", -1 /* HOISTED */);\nconst _hoisted_11 = {\n  key: 0,\n  class: \"helper-text invalid\"\n};\nconst _hoisted_12 = {\n  key: 1,\n  class: \"helper-text invalid\"\n};\nconst _hoisted_13 = {\n  class: \"card-action\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"butt_login\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn waves-effect waves-light auth-submit\",\n  type: \"submit\"\n}, \" Увійти \")], -1 /* HOISTED */);\nconst _hoisted_15 = {\n  class: \"center under_butt_auth\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass($data.backgroundClass)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    class: \"card auth-card\",\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.submitHandler && $setup.submitHandler(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\"            .trim видаляє лишні пробіли\\r\\n                $dirty валідація буде якщо користувач вже шось роби в у полі\\r\\n\"), _withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    class: _normalizeClass({\n      invalid: $setup.v$.email.$dirty && $setup.v$.email.required.$invalid || $setup.v$.email.$dirty && $setup.v$.email.email.$invalid,\n      validate: $setup.v$.email.$dirty && !$setup.v$.email.required.$invalid && !$setup.v$.email.email.$invalid\n    })\n  }, null, 2 /* CLASS */), [[_vModelText, $data.email, void 0, {\n    trim: true\n  }]]), _hoisted_5, $setup.v$.email.$dirty && $setup.v$.email.required.$invalid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_6, \"Поле E-mail не може бути пустим\")) : $setup.v$.email.$dirty && $setup.v$.email.email.$invalid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_7, \"Введіть коректний E-mail\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    type: $setup.isPasswordVisible ? 'text' : 'password',\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    class: _normalizeClass({\n      invalid: $setup.v$.password.$dirty && $setup.v$.password.required.$invalid || $setup.v$.password.$dirty && !$setup.v$.password.minLength.$invalid,\n      validate: $setup.v$.password.$dirty && !$setup.v$.password.required.$invalid && !$setup.v$.password.minLength.$invalid\n    })\n  }, null, 10 /* CLASS, PROPS */, _hoisted_9), [[_vModelDynamic, $data.password, void 0, {\n    trim: true\n  }]]), _hoisted_10, $setup.v$.password.$dirty && $setup.v$.password.required.$invalid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_11, \"Введіть пароль\")) : $setup.v$.password.$dirty && $setup.v$.password.minLength.$invalid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_12, \"Пароль повинен бути \" + _toDisplayString($setup.v$.password.minLength.$params.min) + \" символів. Зараз він \" + _toDisplayString($data.password.length), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"i\", {\n    class: _normalizeClass([\"toggle-password\", $setup.passwordIconClass]),\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.togglePassword && $setup.togglePassword(...args))\n  }, null, 2 /* CLASS */)])]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createElementVNode(\"p\", _hoisted_15, [_createTextVNode(\" Немає аккаунту? \"), _createVNode(_component_router_link, {\n    to: \"/register\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Зареєстурватися\")]),\n    _: 1 /* STABLE */\n  })])])], 32 /* HYDRATE_EVENTS */)])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_normalizeClass","$data","backgroundClass","_hoisted_1","onSubmit","_cache","_withModifiers","args","$setup","submitHandler","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","id","email","$event","v$","$dirty","required","$invalid","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","isPasswordVisible","password","minLength","_hoisted_10","_hoisted_11","_hoisted_12","_toDisplayString","$params","min","length","passwordIconClass","onClick","togglePassword","_hoisted_13","_hoisted_14","_hoisted_15","_createVNode","_component_router_link","to"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\views\\UserLogin.vue"],"sourcesContent":["<template>\r\n  <div :class=\"backgroundClass\">\r\n    <div class=\"empty-layout\">\r\n      <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\r\n        <div class=\"card-content\">\r\n          <span class=\"card-title\">Увійти Losev Formulas</span>\r\n          <div class=\"input-field\">\r\n<!--            .trim видаляє лишні пробіли\r\n                $dirty валідація буде якщо користувач вже шось роби в у полі\r\n-->\r\n            <input\r\n                id=\"email\"\r\n                type=\"text\"\r\n                v-model.trim=\"email\"\r\n                :class=\"{\r\n                  invalid: (v$.email.$dirty && v$.email.required.$invalid) || (v$.email.$dirty && v$.email.email.$invalid),\r\n                  validate: v$.email.$dirty && !v$.email.required.$invalid && !v$.email.email.$invalid\r\n                }\"\r\n            >\r\n            <label for=\"email\">E-mail</label>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-if=\"v$.email.$dirty && v$.email.required.$invalid\"\r\n            >Поле E-mail не може бути пустим</small>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-else-if=\"v$.email.$dirty && v$.email.email.$invalid\"\r\n            >Введіть коректний E-mail</small>\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <input\r\n                id=\"password\"\r\n                :type=\"isPasswordVisible ? 'text' : 'password'\"\r\n                v-model.trim=\"password\"\r\n                :class=\"{\r\n                  invalid: (v$.password.$dirty && v$.password.required.$invalid) || (v$.password.$dirty && !v$.password.minLength.$invalid),\r\n                  validate: v$.password.$dirty && !v$.password.required.$invalid && !v$.password.minLength.$invalid\r\n                }\"\r\n            >\r\n            <label for=\"password\">Пароль</label>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-if=\"v$.password.$dirty && v$.password.required.$invalid\"\r\n            >Введіть пароль</small>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-else-if=\"v$.password.$dirty && v$.password.minLength.$invalid\"\r\n            >Пароль повинен бути {{ v$.password.minLength.$params.min }} символів. Зараз він {{password.length}}</small>\r\n            <i class=\"toggle-password\" :class=\"passwordIconClass\" @click=\"togglePassword\"></i>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-action\">\r\n          <div class=\"butt_login\">\r\n            <button\r\n                class=\"btn waves-effect waves-light auth-submit\"\r\n                type=\"submit\"\r\n            >\r\n              Увійти\r\n            </button>\r\n          </div>\r\n\r\n          <p class=\"center under_butt_auth\">\r\n            Немає аккаунту?\r\n            <router-link to=\"/register\">Зареєстурватися</router-link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport useVuelidate from '@vuelidate/core'\r\nimport { required, email, minLength } from '@vuelidate/validators'\r\nimport {inject} from \"vue\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nexport default {\r\n  name: 'loginPage',\r\n  data () {\r\n    return {\r\n      backgroundClass: null,\r\n      email: '',\r\n      password: ''\r\n    }\r\n  },\r\n  setup () {\r\n    const router = useRouter(); // Переміщено сюди з submitHandler\r\n    const v$ = useVuelidate(); // Визначено тут для спрощення\r\n    const submitHandler = () => {\r\n      if (v$.value.$invalid) {\r\n        v$.value.$touch();\r\n        console.log(\"click to submitHandler\")\r\n        return;\r\n      }\r\n\r\n      //Відправка данних з форми у бекенд\r\n      const formData = {\r\n        email: email.value,\r\n        //password: password.value\r\n      }\r\n      console.log(formData)\r\n\r\n      router.push('/');\r\n    }\r\n\r\n    // Реактивний стан для перевірки видимості пароля\r\n    const isPasswordVisible = ref(false);\r\n\r\n    const passwordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\r\n\r\n    // Функція переключення видимості пароля\r\n    const togglePassword = () => {\r\n      isPasswordVisible.value = !isPasswordVisible.value;\r\n      if (isPasswordVisible.value) {\r\n        passwordIconClass.value = 'fas fa-eye';\r\n      } else {\r\n        passwordIconClass.value = 'fas fa-eye-slash';\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n    return {\r\n      v$,\r\n      submitHandler, // Повертаємо функцію з setup\r\n      isPasswordVisible,\r\n      togglePassword,\r\n      passwordIconClass,\r\n\r\n    }\r\n  },\r\n  validations () {\r\n    return {\r\n      email: { required, email },\r\n      password: { required, minLength: minLength(7) } // припустимо, мінімальна довжина пароля - 6 символів\r\n    }\r\n  },\r\n  created() {\r\n    this.backgroundClass = inject('backgroundClass');\r\n  },\r\n}\r\n\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}