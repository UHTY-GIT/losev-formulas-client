{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelDynamic as _vModelDynamic, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"empty-layout\"\n};\nconst _hoisted_2 = {\n  class: \"card-content\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"card-title\"\n}, \"Реєстрація Losev Formulas\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"input-field\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"E-mail\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  key: 0,\n  class: \"helper-text invalid\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"helper-text invalid\"\n};\nconst _hoisted_8 = {\n  class: \"input-field\"\n};\nconst _hoisted_9 = [\"type\"];\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"Пароль\", -1 /* HOISTED */);\nconst _hoisted_11 = {\n  key: 0,\n  class: \"helper-text invalid\"\n};\nconst _hoisted_12 = {\n  key: 1,\n  class: \"helper-text invalid\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"input-field\\\"><input id=\\\"name\\\" type=\\\"text\\\" class=\\\"validate\\\"><label for=\\\"name\\\">Ваше ім&#39;я</label><small class=\\\"helper-text invalid\\\">Name</small></div><p><label><input type=\\\"checkbox\\\"><span>Згода на обробку персональних даних</span></label></p>\", 2);\nconst _hoisted_15 = {\n  class: \"card-action\"\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"butt_register\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn waves-effect waves-light auth-submit\",\n  type: \"submit\"\n}, \" Зареєструватися \")], -1 /* HOISTED */);\nconst _hoisted_17 = {\n  class: \"center under_butt_auth\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass($data.backgroundClass)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    class: \"card auth-card\",\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => _ctx.submitHandler && _ctx.submitHandler(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    class: _normalizeClass({\n      invalid: _ctx.v$.email.$dirty && _ctx.v$.email.required.$invalid || _ctx.v$.email.$dirty && _ctx.v$.email.email.$invalid,\n      validate: _ctx.v$.email.$dirty && !_ctx.v$.email.required.$invalid && !_ctx.v$.email.email.$invalid\n    })\n  }, null, 2 /* CLASS */), [[_vModelText, $data.email, void 0, {\n    trim: true\n  }]]), _hoisted_5, _ctx.v$.email.$dirty && _ctx.v$.email.required.$invalid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_6, \"Поле E-mail не може бути пустим\")) : _ctx.v$.email.$dirty && _ctx.v$.email.email.$invalid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_7, \"Введіть коректний E-mail\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    type: $setup.isPasswordVisible ? 'text' : 'password',\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    class: _normalizeClass({\n      invalid: _ctx.v$.password.$dirty && _ctx.v$.password.required.$invalid || _ctx.v$.password.$dirty && !_ctx.v$.password.minLength.$invalid,\n      validate: _ctx.v$.password.$dirty && !_ctx.v$.password.required.$invalid && !_ctx.v$.password.minLength.$invalid\n    })\n  }, null, 10 /* CLASS, PROPS */, _hoisted_9), [[_vModelDynamic, $data.password, void 0, {\n    trim: true\n  }]]), _hoisted_10, _ctx.v$.password.$dirty && _ctx.v$.password.required.$invalid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_11, \"Введіть пароль\")) : _ctx.v$.password.$dirty && _ctx.v$.password.minLength.$invalid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_12, \"Пароль повинен бути \" + _toDisplayString(_ctx.v$.password.minLength.$params.min) + \" символів. Зараз він \" + _toDisplayString($data.password.length), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"i\", {\n    class: _normalizeClass([\"toggle-password\", _ctx.passwordIconClass]),\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.togglePassword && $setup.togglePassword(...args))\n  }, null, 2 /* CLASS */)]), _hoisted_13]), _createElementVNode(\"div\", _hoisted_15, [_hoisted_16, _createElementVNode(\"p\", _hoisted_17, [_createTextVNode(\" Вже є аккаунт? \"), _createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Увійти\")]),\n    _: 1 /* STABLE */\n  })])])], 32 /* HYDRATE_EVENTS */)])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_normalizeClass","$data","backgroundClass","_hoisted_1","onSubmit","_cache","_withModifiers","args","_ctx","submitHandler","_hoisted_2","_hoisted_3","_hoisted_4","id","email","$event","v$","$dirty","required","$invalid","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","$setup","isPasswordVisible","password","minLength","_hoisted_10","_hoisted_11","_hoisted_12","_toDisplayString","$params","min","length","passwordIconClass","onClick","togglePassword","_hoisted_13","_hoisted_15","_hoisted_16","_hoisted_17","_createVNode","_component_router_link","to"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\views\\UserRegister.vue"],"sourcesContent":["<template>\r\n  <div :class=\"backgroundClass\">\r\n    <div class=\"empty-layout\">\r\n      <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\r\n      <div class=\"card-content\">\r\n        <span class=\"card-title\">Реєстрація Losev Formulas</span>\r\n        <div class=\"input-field\">\r\n          <input\r\n              id=\"email\"\r\n              type=\"text\"\r\n              v-model.trim=\"email\"\r\n              :class=\"{\r\n                  invalid: (v$.email.$dirty && v$.email.required.$invalid) || (v$.email.$dirty && v$.email.email.$invalid),\r\n                  validate: v$.email.$dirty && !v$.email.required.$invalid && !v$.email.email.$invalid\r\n                }\"\r\n          >\r\n          <label for=\"email\">E-mail</label>\r\n          <small\r\n              class=\"helper-text invalid\"\r\n              v-if=\"v$.email.$dirty && v$.email.required.$invalid\"\r\n          >Поле E-mail не може бути пустим</small>\r\n          <small\r\n              class=\"helper-text invalid\"\r\n              v-else-if=\"v$.email.$dirty && v$.email.email.$invalid\"\r\n          >Введіть коректний E-mail</small>\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <input\r\n              id=\"password\"\r\n              :type=\"isPasswordVisible ? 'text' : 'password'\"\r\n              v-model.trim=\"password\"\r\n              :class=\"{\r\n                  invalid: (v$.password.$dirty && v$.password.required.$invalid) || (v$.password.$dirty && !v$.password.minLength.$invalid),\r\n                  validate: v$.password.$dirty && !v$.password.required.$invalid && !v$.password.minLength.$invalid\r\n                }\"\r\n          >\r\n          <label for=\"password\">Пароль</label>\r\n          <small\r\n              class=\"helper-text invalid\"\r\n              v-if=\"v$.password.$dirty && v$.password.required.$invalid\"\r\n          >Введіть пароль</small>\r\n          <small\r\n              class=\"helper-text invalid\"\r\n              v-else-if=\"v$.password.$dirty && v$.password.minLength.$invalid\"\r\n          >Пароль повинен бути {{ v$.password.minLength.$params.min }} символів. Зараз він {{password.length}}</small>\r\n          <i class=\"toggle-password\" :class=\"passwordIconClass\" @click=\"togglePassword\"></i>\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              class=\"validate\"\r\n          >\r\n          <label for=\"name\">Ваше ім'я</label>\r\n          <small class=\"helper-text invalid\">Name</small>\r\n        </div>\r\n        <p>\r\n          <label>\r\n            <input type=\"checkbox\" />\r\n            <span>Згода на обробку персональних даних</span>\r\n          </label>\r\n        </p>\r\n      </div>\r\n      <div class=\"card-action\">\r\n        <div class=\"butt_register\">\r\n          <button\r\n              class=\"btn waves-effect waves-light auth-submit\"\r\n              type=\"submit\"\r\n          >\r\n            Зареєструватися\r\n          </button>\r\n        </div>\r\n\r\n        <p class=\"center under_butt_auth\">\r\n          Вже є аккаунт?\r\n          <router-link to=\"/login\">Увійти</router-link>\r\n        </p>\r\n      </div>\r\n    </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { inject } from 'vue';\r\nimport useVuelidate from '@vuelidate/core'\r\nimport { required, email, minLength } from '@vuelidate/validators'\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\r\nexport default {\r\n  name: 'RegisterPage',\r\n  data () {\r\n    return {\r\n      backgroundClass: null,\r\n      email: '',\r\n      password: ''\r\n    }\r\n  },\r\n  setup () {\r\n    const router = useRouter(); // Переміщено сюди з submitHandler\r\n    const v$ = useVuelidate(); // Визначено тут для спрощення\r\n    const submitHandler = () => {\r\n      if (v$.value.$invalid) {\r\n        v$.value.$touch();\r\n        console.log(\"click to submitHandler\")\r\n        return;\r\n      }\r\n\r\n      router.push('/');\r\n    }\r\n\r\n    // Реактивний стан для перевірки видимості пароля\r\n    const isPasswordVisible = ref(false);\r\n\r\n    const passwordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\r\n\r\n    // Функція переключення видимості пароля\r\n    const togglePassword = () => {\r\n      isPasswordVisible.value = !isPasswordVisible.value;\r\n      if (isPasswordVisible.value) {\r\n        passwordIconClass.value = 'fas fa-eye';\r\n      } else {\r\n        passwordIconClass.value = 'fas fa-eye-slash';\r\n      }\r\n    }\r\n    return {\r\n      isPasswordVisible,\r\n      togglePassword,\r\n    }\r\n  },\r\n  created() {\r\n    this.backgroundClass = inject('backgroundClass');\r\n  },\r\n}\r\n</script>"],"mappings":";;EAESA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAc;gCACvBC,mBAAA,CAAyD;EAAnDD,KAAK,EAAC;AAAY,GAAC,2BAAyB;;EAC7CA,KAAK,EAAC;AAAa;gCAUtBC,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAO,GAAC,QAAM;;;EAErBF,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;EAIPA,KAAK,EAAC;AAAa;;iCAUtBC,mBAAA,CAAoC;EAA7BC,GAAG,EAAC;AAAU,GAAC,QAAM;;;EAExBF,KAAK,EAAC;;;;EAINA,KAAK,EAAC;;;;EAqBTA,KAAK,EAAC;AAAa;iCACtBC,mBAAA,CAOM;EAPDD,KAAK,EAAC;AAAe,I,aACxBC,mBAAA,CAKS;EAJLD,KAAK,EAAC,0CAA0C;EAChDG,IAAI,EAAC;GACR,mBAED,E;;EAGCH,KAAK,EAAC;AAAwB;;;uBAxEvCI,mBAAA,CA+EM;IA/EAJ,KAAK,EAAAK,eAAA,CAAEC,KAAA,CAAAC,eAAe;MAC1BN,mBAAA,CA6EM,OA7ENO,UA6EM,GA5EJP,mBAAA,CA2EK;IA3ECD,KAAK,EAAC,gBAAgB;IAAES,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,IAAA,CAAAC,aAAA,IAAAD,IAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAC3DX,mBAAA,CA0DM,OA1DNc,UA0DM,GAzDJC,UAAyD,EACzDf,mBAAA,CAmBM,OAnBNgB,UAmBM,G,gBAlBJhB,mBAAA,CAQC;IAPGiB,EAAE,EAAC,OAAO;IACVf,IAAI,EAAC,MAAM;+DACGG,KAAA,CAAAa,KAAK,GAAAC,MAAA;IAClBpB,KAAK,EAAAK,eAAA;eAAiCQ,IAAA,CAAAQ,EAAE,CAACF,KAAK,CAACG,MAAM,IAAIT,IAAA,CAAAQ,EAAE,CAACF,KAAK,CAACI,QAAQ,CAACC,QAAQ,IAAMX,IAAA,CAAAQ,EAAE,CAACF,KAAK,CAACG,MAAM,IAAIT,IAAA,CAAAQ,EAAE,CAACF,KAAK,CAACA,KAAK,CAACK,QAAQ;gBAAgCX,IAAA,CAAAQ,EAAE,CAACF,KAAK,CAACG,MAAM,KAAKT,IAAA,CAAAQ,EAAE,CAACF,KAAK,CAACI,QAAQ,CAACC,QAAQ,KAAKX,IAAA,CAAAQ,EAAE,CAACF,KAAK,CAACA,KAAK,CAACK;;0CADxNlB,KAAA,CAAAa,KAAK,E;UAAnB;EAAoB,E,IAMxBM,UAAiC,EAGvBZ,IAAA,CAAAQ,EAAE,CAACF,KAAK,CAACG,MAAM,IAAIT,IAAA,CAAAQ,EAAE,CAACF,KAAK,CAACI,QAAQ,CAACC,QAAQ,I,cAFvDpB,mBAAA,CAGwC,SAHxCsB,UAGwC,EAAvC,iCAA+B,KAGjBb,IAAA,CAAAQ,EAAE,CAACF,KAAK,CAACG,MAAM,IAAIT,IAAA,CAAAQ,EAAE,CAACF,KAAK,CAACA,KAAK,CAACK,QAAQ,I,cAFzDpB,mBAAA,CAGiC,SAHjCuB,UAGiC,EAAhC,0BAAwB,K,qCAE3B1B,mBAAA,CAoBM,OApBN2B,UAoBM,G,gBAnBJ3B,mBAAA,CAQC;IAPGiB,EAAE,EAAC,UAAU;IACZf,IAAI,EAAE0B,MAAA,CAAAC,iBAAiB;+DACVxB,KAAA,CAAAyB,QAAQ,GAAAX,MAAA;IACrBpB,KAAK,EAAAK,eAAA;eAAiCQ,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACT,MAAM,IAAIT,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACR,QAAQ,CAACC,QAAQ,IAAMX,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACT,MAAM,KAAKT,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACC,SAAS,CAACR,QAAQ;gBAAgCX,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACT,MAAM,KAAKT,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACR,QAAQ,CAACC,QAAQ,KAAKX,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACC,SAAS,CAACR;;iEADtPlB,KAAA,CAAAyB,QAAQ,E;UAAtB;EAAuB,E,IAM3BE,WAAoC,EAG1BpB,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACT,MAAM,IAAIT,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACR,QAAQ,CAACC,QAAQ,I,cAF7DpB,mBAAA,CAGuB,SAHvB8B,WAGuB,EAAtB,gBAAc,KAGArB,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACT,MAAM,IAAIT,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACC,SAAS,CAACR,QAAQ,I,cAFnEpB,mBAAA,CAG4G,SAH5G+B,WAG4G,EAA3G,sBAAoB,GAAAC,gBAAA,CAAGvB,IAAA,CAAAQ,EAAE,CAACU,QAAQ,CAACC,SAAS,CAACK,OAAO,CAACC,GAAG,IAAG,uBAAqB,GAAAF,gBAAA,CAAE9B,KAAA,CAAAyB,QAAQ,CAACQ,MAAM,oB,mCAClGtC,mBAAA,CAAkF;IAA/ED,KAAK,EAAAK,eAAA,EAAC,iBAAiB,EAASQ,IAAA,CAAA2B,iBAAiB;IAAGC,OAAK,EAAA/B,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEiB,MAAA,CAAAa,cAAA,IAAAb,MAAA,CAAAa,cAAA,IAAA9B,IAAA,CAAc;6BAE9E+B,WAQM,C,GAQR1C,mBAAA,CAcM,OAdN2C,WAcM,GAbJC,WAOM,EAEN5C,mBAAA,CAGI,KAHJ6C,WAGI,G,iBAH8B,kBAEhC,GAAAC,YAAA,CAA6CC,sBAAA;IAAhCC,EAAE,EAAC;EAAQ;sBAAC,MAAM,C,iBAAN,QAAM,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}