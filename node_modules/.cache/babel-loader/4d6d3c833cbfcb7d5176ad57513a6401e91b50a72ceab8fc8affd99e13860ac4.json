{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//import messages from \"@/utils/messages\";\nimport { ref } from \"vue\";\nimport useVuelidate from '@vuelidate/core';\nimport { required, minLength } from \"@vuelidate/validators\";\nimport apiService from '@/services/apiService';\nimport M from \"materialize-css\";\n// import { useRouter } from \"vue-router\";\n\nexport default {\n  name: 'ProfilePage',\n  setup() {\n    const name = ref('');\n    const password = ref('');\n    const newPassword = ref('');\n    const v$ = useVuelidate();\n    //const router = useRouter();\n\n    // Відправка форми по зміні імені\n    const submitUserName = async () => {\n      if (v$.value.nameForm.$invalid) {\n        v$.value.nameForm.$touch();\n        console.log(\"click to submitUserName\");\n        return;\n      }\n      const formDataUserName = {\n        name: name.value\n      };\n      console.log(formDataUserName);\n    };\n\n    // Відправка форми по зміні паролю\n    const submitUserPassword = async () => {\n      if (v$.value.passwordForm.$invalid) {\n        v$.value.passwordForm.$touch();\n        console.log(\"click to submitUserPassword\");\n        return;\n      }\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.log(\"Токен не знайдений. Перенаправлення на сторінку входу.\");\n        this.$router.push('/login');\n        return;\n      }\n      const oldPassword = password.value;\n      const newPass = newPassword.value;\n      try {\n        const response = await apiService.changeUserPassword(token, oldPassword, newPass);\n        M.toast({\n          html: `Пароль успішно змінено`\n        });\n        console.log('Пароль успішно змінено:', response);\n      } catch (error) {\n        M.toast({\n          html: `[Помилка]: Пароль змінити не вдалося`\n        });\n        console.log('Помилка при зміні паролю:', error);\n      }\n      // const formDataPassword = {\n      //   password: password.value,\n      //   newPassword: newPassword.value\n      // };\n      // console.log(formDataPassword);\n    };\n\n    // Реактивний стан для перевірки видимості старого пароля\n    const isOldPasswordVisible = ref(false);\n    const OldPasswordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\n\n    // Функція переключення видимості пароля\n    const OldTogglePassword = () => {\n      isOldPasswordVisible.value = !isOldPasswordVisible.value;\n      if (isOldPasswordVisible.value) {\n        OldPasswordIconClass.value = 'fas fa-eye';\n      } else {\n        OldPasswordIconClass.value = 'fas fa-eye-slash';\n      }\n    };\n\n    // Реактивний стан для перевірки видимості нового пароля\n    const isNewPasswordVisible = ref(false);\n    const NewPasswordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\n\n    // Функція переключення видимості пароля\n    const NewTogglePassword = () => {\n      isNewPasswordVisible.value = !isNewPasswordVisible.value;\n      if (isNewPasswordVisible.value) {\n        NewPasswordIconClass.value = 'fas fa-eye';\n      } else {\n        NewPasswordIconClass.value = 'fas fa-eye-slash';\n      }\n    };\n    return {\n      v$,\n      submitUserName,\n      submitUserPassword,\n      OldTogglePassword,\n      NewTogglePassword,\n      isOldPasswordVisible,\n      isNewPasswordVisible,\n      OldPasswordIconClass,\n      NewPasswordIconClass,\n      name,\n      password,\n      newPassword\n    };\n  },\n  validations() {\n    return {\n      nameForm: {\n        name: {\n          required\n        }\n      },\n      passwordForm: {\n        password: {\n          required\n        },\n        newPassword: {\n          required,\n          minLength: minLength(6)\n        }\n      }\n    };\n  },\n  methods: {\n    //Виводимо ключ get запитом у url шоб вивнести повідомлення logout на екран на сторінці UserLogin\n    async logout() {\n      const token = localStorage.getItem('token');\n      console.log(\"remove \" + token);\n      if (token) {\n        await apiService.logoutUser(token);\n        localStorage.removeItem('token'); // Видаляємо токен з localStorage\n        this.$router.push('/login?message=logout');\n      } else {\n        console.log(\"Токен не знайдений. Перенаправлення на сторінку входу.\");\n        this.$router.push('/login');\n      }\n    }\n  }\n};","map":{"version":3,"names":["ref","useVuelidate","required","minLength","apiService","M","name","setup","password","newPassword","v$","submitUserName","value","nameForm","$invalid","$touch","console","log","formDataUserName","submitUserPassword","passwordForm","token","localStorage","getItem","$router","push","oldPassword","newPass","response","changeUserPassword","toast","html","error","isOldPasswordVisible","OldPasswordIconClass","OldTogglePassword","isNewPasswordVisible","NewPasswordIconClass","NewTogglePassword","validations","methods","logout","logoutUser","removeItem"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\views\\UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"page_title\">\r\n    <p>\r\n      Мій профіль\r\n    </p>\r\n  </div>\r\n  <div class=\"profile-content\">\r\n<!--    Форма для зміни імені-->\r\n    <ProfileNameForm />\r\n<!--    Форма для зміни паролю-->\r\n\r\n<!--    Вихід з аккаунту-->\r\n    <div class=\"logout-section\">\r\n      <a href=\"#\" @click.prevent=\"logout\" class=\"logout-link\">\r\n        <img src=\"@/assets/icons/log-out-1.png\" alt=\"Edit Button\">\r\n         <span class=\"edit-link\">Вийти з аккаунту</span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n//import messages from \"@/utils/messages\";\r\nimport {ref} from \"vue\";\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required, minLength } from \"@vuelidate/validators\";\r\nimport apiService from '@/services/apiService';\r\nimport M from \"materialize-css\";\r\n// import { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  name: 'ProfilePage',\r\n  setup () {\r\n    const name = ref('');\r\n    const password = ref('');\r\n    const newPassword = ref('');\r\n\r\n    const v$ = useVuelidate();\r\n    //const router = useRouter();\r\n\r\n    // Відправка форми по зміні імені\r\n    const submitUserName = async () => {\r\n      if (v$.value.nameForm.$invalid) {\r\n        v$.value.nameForm.$touch();\r\n        console.log(\"click to submitUserName\");\r\n        return;\r\n      }\r\n      const formDataUserName = {\r\n        name: name.value\r\n      };\r\n      console.log(formDataUserName);\r\n    }\r\n\r\n    // Відправка форми по зміні паролю\r\n    const submitUserPassword = async () => {\r\n\r\n      if (v$.value.passwordForm.$invalid) {\r\n        v$.value.passwordForm.$touch();\r\n        console.log(\"click to submitUserPassword\");\r\n        return;\r\n      }\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.log(\"Токен не знайдений. Перенаправлення на сторінку входу.\");\r\n        this.$router.push('/login');\r\n        return;\r\n      }\r\n\r\n      const oldPassword = password.value;\r\n      const newPass = newPassword.value;\r\n\r\n      try {\r\n        const response = await apiService.changeUserPassword(token, oldPassword, newPass);\r\n        M.toast({ html: `Пароль успішно змінено` });\r\n        console.log('Пароль успішно змінено:', response);\r\n      } catch (error) {\r\n        M.toast({ html: `[Помилка]: Пароль змінити не вдалося` });\r\n        console.log('Помилка при зміні паролю:', error);\r\n      }\r\n      // const formDataPassword = {\r\n      //   password: password.value,\r\n      //   newPassword: newPassword.value\r\n      // };\r\n      // console.log(formDataPassword);\r\n    }\r\n\r\n    // Реактивний стан для перевірки видимості старого пароля\r\n    const isOldPasswordVisible = ref(false);\r\n\r\n    const OldPasswordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\r\n\r\n    // Функція переключення видимості пароля\r\n    const OldTogglePassword = () => {\r\n      isOldPasswordVisible.value = !isOldPasswordVisible.value;\r\n      if (isOldPasswordVisible.value) {\r\n        OldPasswordIconClass.value = 'fas fa-eye';\r\n      } else {\r\n        OldPasswordIconClass.value = 'fas fa-eye-slash';\r\n      }\r\n    }\r\n\r\n    // Реактивний стан для перевірки видимості нового пароля\r\n    const isNewPasswordVisible = ref(false);\r\n\r\n    const NewPasswordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\r\n\r\n    // Функція переключення видимості пароля\r\n    const NewTogglePassword = () => {\r\n      isNewPasswordVisible.value = !isNewPasswordVisible.value;\r\n      if (isNewPasswordVisible.value) {\r\n        NewPasswordIconClass.value = 'fas fa-eye';\r\n      } else {\r\n        NewPasswordIconClass.value = 'fas fa-eye-slash';\r\n      }\r\n    }\r\n\r\n    return {\r\n      v$,\r\n      submitUserName,\r\n      submitUserPassword,\r\n      OldTogglePassword,\r\n      NewTogglePassword,\r\n      isOldPasswordVisible,\r\n      isNewPasswordVisible,\r\n      OldPasswordIconClass,\r\n      NewPasswordIconClass,\r\n      name,\r\n      password,\r\n      newPassword,\r\n    }\r\n  },\r\n  validations () {\r\n    return {\r\n      nameForm: {\r\n        name: { required }\r\n      },\r\n      passwordForm: {\r\n        password: { required },\r\n        newPassword: { required, minLength: minLength(6) }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    //Виводимо ключ get запитом у url шоб вивнести повідомлення logout на екран на сторінці UserLogin\r\n    async logout() {\r\n      const token = localStorage.getItem('token');\r\n      console.log(\"remove \" + token);\r\n      if (token) {\r\n        await apiService.logoutUser(token);\r\n        localStorage.removeItem('token');  // Видаляємо токен з localStorage\r\n        this.$router.push('/login?message=logout');\r\n      } else {\r\n        console.log(\"Токен не знайдений. Перенаправлення на сторінку входу.\");\r\n        this.$router.push('/login');\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}