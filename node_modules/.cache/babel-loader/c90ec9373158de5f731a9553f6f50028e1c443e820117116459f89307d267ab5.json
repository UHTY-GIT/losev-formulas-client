{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport useVuelidate from '@vuelidate/core';\nimport { required, minLength } from \"@vuelidate/validators\";\nimport M from \"materialize-css\";\nexport default {\n  setup() {\n    const password = ref('');\n    const newPassword = ref('');\n    const v$ = useVuelidate();\n    const router = useRouter();\n\n    // Відправка форми по зміні паролю\n    const submitUserPassword = async () => {\n      if (v$.value.passwordForm.$invalid) {\n        v$.value.passwordForm.$touch();\n        console.log(\"click to submitUserPassword\");\n        return;\n      }\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.log(\"Токен не знайдений. Перенаправлення на сторінку входу.\");\n        this.$router.push('/login');\n        return;\n      }\n      const oldPassword = password.value;\n      const newPass = newPassword.value;\n      try {\n        const response = await apiService.changeUserPassword(token, oldPassword, newPass);\n        M.toast({\n          html: `Пароль успішно змінено`\n        });\n        console.log('Пароль успішно змінено:', response);\n      } catch (error) {\n        M.toast({\n          html: `[Помилка]: Пароль змінити не вдалося`\n        });\n        console.log('Помилка при зміні паролю:', error);\n      }\n      // const formDataPassword = {\n      //   password: password.value,\n      //   newPassword: newPassword.value\n      // };\n      // console.log(formDataPassword);\n    };\n\n    // Реактивний стан для перевірки видимості старого пароля\n    const isOldPasswordVisible = ref(false);\n    const OldPasswordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\n\n    // Функція переключення видимості пароля\n    const OldTogglePassword = () => {\n      isOldPasswordVisible.value = !isOldPasswordVisible.value;\n      if (isOldPasswordVisible.value) {\n        OldPasswordIconClass.value = 'fas fa-eye';\n      } else {\n        OldPasswordIconClass.value = 'fas fa-eye-slash';\n      }\n    };\n\n    // Реактивний стан для перевірки видимості нового пароля\n    const isNewPasswordVisible = ref(false);\n    const NewPasswordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\n\n    // Функція переключення видимості пароля\n    const NewTogglePassword = () => {\n      isNewPasswordVisible.value = !isNewPasswordVisible.value;\n      if (isNewPasswordVisible.value) {\n        NewPasswordIconClass.value = 'fas fa-eye';\n      } else {\n        NewPasswordIconClass.value = 'fas fa-eye-slash';\n      }\n    };\n    return {\n      v$,\n      submitUserPassword,\n      OldTogglePassword,\n      NewTogglePassword,\n      isOldPasswordVisible,\n      isNewPasswordVisible,\n      OldPasswordIconClass,\n      NewPasswordIconClass,\n      password,\n      newPassword\n    };\n  },\n  validations() {\n    return {\n      password: {\n        required\n      },\n      newPassword: {\n        required,\n        minLength: minLength(6)\n      }\n    };\n  }\n};","map":{"version":3,"names":["ref","useVuelidate","required","minLength","M","setup","password","newPassword","v$","router","useRouter","submitUserPassword","value","passwordForm","$invalid","$touch","console","log","token","localStorage","getItem","$router","push","oldPassword","newPass","response","apiService","changeUserPassword","toast","html","error","isOldPasswordVisible","OldPasswordIconClass","OldTogglePassword","isNewPasswordVisible","NewPasswordIconClass","NewTogglePassword","validations"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\components\\Profile\\ProfilePasswordForm.vue"],"sourcesContent":["<template>\r\n  <form class=\"form password-update-form\" @submit.prevent=\"submitUserPassword\">\r\n    <div class=\"input-field my_profile_input\">\r\n      <input\r\n          id=\"old-password\"\r\n          :type=\"isOldPasswordVisible ? 'text' : 'password'\"\r\n          v-model.trim=\"password\"\r\n          :class=\"{\r\n              invalid: v$.passwordForm.password.$dirty && v$.passwordForm.password.required.$invalid,\r\n              validate: v$.passwordForm.password.$dirty && !v$.passwordForm.password.required.$invalid\r\n            }\"\r\n      >\r\n      <label for=\"old-password\">Старий пароль</label>\r\n      <small\r\n          class=\"helper-text invalid\"\r\n          v-if=\"v$.passwordForm.password.$dirty && v$.passwordForm.password.required.$invalid\"\r\n      >Введіть старий пароль</small>\r\n      <i class=\"toggle-password user-page-password\" :class=\"OldPasswordIconClass\" @click=\"OldTogglePassword\"></i>\r\n    </div>\r\n\r\n    <div class=\"input-field my_profile_input\">\r\n      <input\r\n          id=\"new-password\"\r\n          :type=\"isNewPasswordVisible ? 'text' : 'password'\"\r\n          v-model.trim=\"newPassword\"\r\n          :class=\"{\r\n                  invalid: (v$.passwordForm.newPassword.$dirty && v$.passwordForm.newPassword.required.$invalid) || (v$.passwordForm.newPassword.$dirty && !v$.passwordForm.newPassword.minLength.$invalid),\r\n                  validate: v$.passwordForm.newPassword.$dirty && !v$.passwordForm.newPassword.required.$invalid && !v$.passwordForm.newPassword.minLength.$invalid\r\n                }\"\r\n      >\r\n      <label for=\"new-password\">Новий пароль</label>\r\n      <small\r\n          class=\"helper-text invalid\"\r\n          v-if=\"v$.passwordForm.newPassword.$dirty && v$.passwordForm.newPassword.required.$invalid\"\r\n      >Введіть новий пароль</small>\r\n      <small\r\n          class=\"helper-text invalid\"\r\n          v-else-if=\"v$.passwordForm.newPassword.$dirty && v$.passwordForm.newPassword.minLength.$invalid\"\r\n      >Новий пароль повинен бути {{ v$.passwordForm.newPassword.minLength.$params.min }} символів. Зараз він {{newPassword.length}}</small>\r\n      <i class=\"toggle-password user-page-password\" :class=\"NewPasswordIconClass\" @click=\"NewTogglePassword\"></i>\r\n    </div>\r\n\r\n    <button class=\"name-edit\" type=\"submit\">\r\n      <img src=\"@/assets/icons/edit-button-1.png\" alt=\"Edit Button\">\r\n      <span class=\"edit-link\">Змінити пароль</span>\r\n    </button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required, minLength } from \"@vuelidate/validators\";\r\nimport M from \"materialize-css\";\r\n\r\nexport default {\r\n  setup () {\r\n    const password = ref('');\r\n    const newPassword = ref('');\r\n\r\n    const v$ = useVuelidate();\r\n    const router = useRouter();\r\n\r\n    // Відправка форми по зміні паролю\r\n    const submitUserPassword = async () => {\r\n\r\n      if (v$.value.passwordForm.$invalid) {\r\n        v$.value.passwordForm.$touch();\r\n        console.log(\"click to submitUserPassword\");\r\n        return;\r\n      }\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.log(\"Токен не знайдений. Перенаправлення на сторінку входу.\");\r\n        this.$router.push('/login');\r\n        return;\r\n      }\r\n\r\n      const oldPassword = password.value;\r\n      const newPass = newPassword.value;\r\n\r\n      try {\r\n        const response = await apiService.changeUserPassword(token, oldPassword, newPass);\r\n        M.toast({ html: `Пароль успішно змінено` });\r\n        console.log('Пароль успішно змінено:', response);\r\n      } catch (error) {\r\n        M.toast({ html: `[Помилка]: Пароль змінити не вдалося` });\r\n        console.log('Помилка при зміні паролю:', error);\r\n      }\r\n      // const formDataPassword = {\r\n      //   password: password.value,\r\n      //   newPassword: newPassword.value\r\n      // };\r\n      // console.log(formDataPassword);\r\n    }\r\n\r\n    // Реактивний стан для перевірки видимості старого пароля\r\n    const isOldPasswordVisible = ref(false);\r\n\r\n    const OldPasswordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\r\n\r\n    // Функція переключення видимості пароля\r\n    const OldTogglePassword = () => {\r\n      isOldPasswordVisible.value = !isOldPasswordVisible.value;\r\n      if (isOldPasswordVisible.value) {\r\n        OldPasswordIconClass.value = 'fas fa-eye';\r\n      } else {\r\n        OldPasswordIconClass.value = 'fas fa-eye-slash';\r\n      }\r\n    }\r\n\r\n    // Реактивний стан для перевірки видимості нового пароля\r\n    const isNewPasswordVisible = ref(false);\r\n\r\n    const NewPasswordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки\r\n\r\n    // Функція переключення видимості пароля\r\n    const NewTogglePassword = () => {\r\n      isNewPasswordVisible.value = !isNewPasswordVisible.value;\r\n      if (isNewPasswordVisible.value) {\r\n        NewPasswordIconClass.value = 'fas fa-eye';\r\n      } else {\r\n        NewPasswordIconClass.value = 'fas fa-eye-slash';\r\n      }\r\n    }\r\n\r\n    return {\r\n      v$,\r\n      submitUserPassword,\r\n      OldTogglePassword,\r\n      NewTogglePassword,\r\n      isOldPasswordVisible,\r\n      isNewPasswordVisible,\r\n      OldPasswordIconClass,\r\n      NewPasswordIconClass,\r\n      password,\r\n      newPassword,\r\n    }\r\n  },\r\n  validations () {\r\n    return {\r\n      password: { required },\r\n      newPassword: { required, minLength: minLength(6) }\r\n    }\r\n  },\r\n}\r\n</script>"],"mappings":";AAkDA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,YAAW,MAAO,iBAAiB;AAC1C,SAASC,QAAQ,EAAEC,SAAQ,QAAS,uBAAuB;AAC3D,OAAOC,CAAA,MAAO,iBAAiB;AAE/B,eAAe;EACbC,KAAIA,CAAA,EAAK;IACP,MAAMC,QAAO,GAAIN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,WAAU,GAAIP,GAAG,CAAC,EAAE,CAAC;IAE3B,MAAMQ,EAAC,GAAIP,YAAY,CAAC,CAAC;IACzB,MAAMQ,MAAK,GAAIC,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAMC,kBAAiB,GAAI,MAAAA,CAAA,KAAY;MAErC,IAAIH,EAAE,CAACI,KAAK,CAACC,YAAY,CAACC,QAAQ,EAAE;QAClCN,EAAE,CAACI,KAAK,CAACC,YAAY,CAACE,MAAM,CAAC,CAAC;QAC9BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C;MACF;MACA,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVF,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;QACrE,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC3B;MACF;MAEA,MAAMC,WAAU,GAAIjB,QAAQ,CAACM,KAAK;MAClC,MAAMY,OAAM,GAAIjB,WAAW,CAACK,KAAK;MAEjC,IAAI;QACF,MAAMa,QAAO,GAAI,MAAMC,UAAU,CAACC,kBAAkB,CAACT,KAAK,EAAEK,WAAW,EAAEC,OAAO,CAAC;QACjFpB,CAAC,CAACwB,KAAK,CAAC;UAAEC,IAAI,EAAG;QAAwB,CAAC,CAAC;QAC3Cb,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEQ,QAAQ,CAAC;MAClD,EAAE,OAAOK,KAAK,EAAE;QACd1B,CAAC,CAACwB,KAAK,CAAC;UAAEC,IAAI,EAAG;QAAsC,CAAC,CAAC;QACzDb,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEa,KAAK,CAAC;MACjD;MACA;MACA;MACA;MACA;MACA;IACF;;IAEA;IACA,MAAMC,oBAAmB,GAAI/B,GAAG,CAAC,KAAK,CAAC;IAEvC,MAAMgC,oBAAmB,GAAIhC,GAAG,CAAC,kBAAkB,CAAC,EAAE;;IAEtD;IACA,MAAMiC,iBAAgB,GAAIA,CAAA,KAAM;MAC9BF,oBAAoB,CAACnB,KAAI,GAAI,CAACmB,oBAAoB,CAACnB,KAAK;MACxD,IAAImB,oBAAoB,CAACnB,KAAK,EAAE;QAC9BoB,oBAAoB,CAACpB,KAAI,GAAI,YAAY;MAC3C,OAAO;QACLoB,oBAAoB,CAACpB,KAAI,GAAI,kBAAkB;MACjD;IACF;;IAEA;IACA,MAAMsB,oBAAmB,GAAIlC,GAAG,CAAC,KAAK,CAAC;IAEvC,MAAMmC,oBAAmB,GAAInC,GAAG,CAAC,kBAAkB,CAAC,EAAE;;IAEtD;IACA,MAAMoC,iBAAgB,GAAIA,CAAA,KAAM;MAC9BF,oBAAoB,CAACtB,KAAI,GAAI,CAACsB,oBAAoB,CAACtB,KAAK;MACxD,IAAIsB,oBAAoB,CAACtB,KAAK,EAAE;QAC9BuB,oBAAoB,CAACvB,KAAI,GAAI,YAAY;MAC3C,OAAO;QACLuB,oBAAoB,CAACvB,KAAI,GAAI,kBAAkB;MACjD;IACF;IAEA,OAAO;MACLJ,EAAE;MACFG,kBAAkB;MAClBsB,iBAAiB;MACjBG,iBAAiB;MACjBL,oBAAoB;MACpBG,oBAAoB;MACpBF,oBAAoB;MACpBG,oBAAoB;MACpB7B,QAAQ;MACRC;IACF;EACF,CAAC;EACD8B,WAAUA,CAAA,EAAK;IACb,OAAO;MACL/B,QAAQ,EAAE;QAAEJ;MAAS,CAAC;MACtBK,WAAW,EAAE;QAAEL,QAAQ;QAAEC,SAAS,EAAEA,SAAS,CAAC,CAAC;MAAE;IACnD;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}