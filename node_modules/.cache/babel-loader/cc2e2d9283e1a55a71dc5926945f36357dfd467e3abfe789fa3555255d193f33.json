{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '@/assets/icons/edit-button-1.png';\nimport _imports_1 from '@/assets/icons/log-out-1.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"page_title\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \" Мій профіль \")], -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"profile-content\"\n};\nconst _hoisted_3 = {\n  class: \"input-field my_profile_input\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Ім'я\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 0,\n  class: \"helper-text invalid\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"name-edit\",\n  type: \"submit\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Edit Button\"\n}), /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"edit-link\"\n}, \"Змінити ім’я\")], -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createStaticVNode(\"<form class=\\\"form password-update-form\\\"><div class=\\\"input-field my_profile_input\\\"><input id=\\\"old-password\\\" type=\\\"password\\\"><label for=\\\"old-password\\\">Старий пароль</label><span class=\\\"helper-text invalid\\\">Старий пароль</span></div><div class=\\\"input-field my_profile_input\\\"><input id=\\\"new-password\\\" type=\\\"password\\\"><label for=\\\"new-password\\\">Новий пароль</label><span class=\\\"helper-text invalid\\\">Новий пароль</span></div><button class=\\\"name-edit\\\" type=\\\"submit\\\"><img src=\\\"\" + _imports_0 + \"\\\" alt=\\\"Edit Button\\\"><span class=\\\"edit-link\\\">Змінити пароль</span></button></form>\", 1);\nconst _hoisted_8 = {\n  class: \"logout-section\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1,\n  alt: \"Edit Button\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"edit-link\"\n}, \"Вийти з аккаунту\", -1 /* HOISTED */);\nconst _hoisted_11 = [_hoisted_9, _hoisted_10];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\"    Форма для зміни імені\"), _createElementVNode(\"form\", {\n    class: \"form name-update-form\",\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $setup.submitUserName && $setup.submitUserName(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.name = $event),\n    class: _normalizeClass({\n      invalid: _ctx.v$.name.$dirty && _ctx.v$.name.required.$invalid,\n      validate: _ctx.v$.name.$dirty && !_ctx.v$.name.required.$invalid\n    })\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.name, void 0, {\n    trim: true\n  }]]), _hoisted_4, _ctx.v$.name.$dirty && _ctx.v$.name.required.$invalid ? (_openBlock(), _createElementBlock(\"small\", _hoisted_5, \"Введіть ваше ім'я\")) : _createCommentVNode(\"v-if\", true)]), _hoisted_6], 32 /* HYDRATE_EVENTS */), _createCommentVNode(\"    Форма для зміни паролю\"), _hoisted_7, _createCommentVNode(\"    Вихід з аккаунту\"), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.logout && $options.logout(...args), [\"prevent\"])),\n    class: \"logout-link\"\n  }, _hoisted_11)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_createElementVNode","class","for","type","src","alt","_hoisted_9","_hoisted_10","_hoisted_1","_hoisted_2","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$setup","submitUserName","_hoisted_3","id","name","$event","_normalizeClass","_ctx","v$","$dirty","required","$invalid","_hoisted_4","_createElementBlock","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","href","onClick","$options","logout"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\views\\UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"page_title\">\r\n    <p>\r\n      Мій профіль\r\n    </p>\r\n  </div>\r\n  <div class=\"profile-content\">\r\n<!--    Форма для зміни імені-->\r\n    <form class=\"form name-update-form\" @submit.prevent=\"submitUserName\">\r\n      <div class=\"input-field my_profile_input\">\r\n        <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            v-model.trim=\"name\"\r\n            :class=\"{\r\n                  invalid: v$.name.$dirty && v$.name.required.$invalid,\r\n                  validate: v$.name.$dirty && !v$.name.required.$invalid\r\n                }\"\r\n        >\r\n        <label for=\"name\">Ім'я</label>\r\n        <small\r\n            class=\"helper-text invalid\"\r\n            v-if=\"v$.name.$dirty && v$.name.required.$invalid\"\r\n        >Введіть ваше ім'я</small>\r\n      </div>\r\n      <button class=\"name-edit\" type=\"submit\">\r\n        <img src=\"@/assets/icons/edit-button-1.png\" alt=\"Edit Button\">\r\n        <span class=\"edit-link\">Змінити ім’я</span>\r\n      </button>\r\n    </form>\r\n<!--    Форма для зміни паролю-->\r\n    <form class=\"form password-update-form\">\r\n      <div class=\"input-field my_profile_input\">\r\n        <input\r\n            id=\"old-password\"\r\n            type=\"password\"\r\n        >\r\n        <label for=\"old-password\">Старий пароль</label>\r\n        <span class=\"helper-text invalid\">Старий пароль</span>\r\n      </div>\r\n\r\n      <div class=\"input-field my_profile_input\">\r\n        <input\r\n            id=\"new-password\"\r\n            type=\"password\"\r\n        >\r\n        <label for=\"new-password\">Новий пароль</label>\r\n        <span class=\"helper-text invalid\">Новий пароль</span>\r\n      </div>\r\n\r\n      <button class=\"name-edit\" type=\"submit\">\r\n        <img src=\"@/assets/icons/edit-button-1.png\" alt=\"Edit Button\">\r\n        <span class=\"edit-link\">Змінити пароль</span>\r\n      </button>\r\n    </form>\r\n<!--    Вихід з аккаунту-->\r\n    <div class=\"logout-section\">\r\n      <a href=\"#\" @click.prevent=\"logout\" class=\"logout-link\">\r\n        <img src=\"@/assets/icons/log-out-1.png\" alt=\"Edit Button\">\r\n         <span class=\"edit-link\">Вийти з аккаунту</span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n//import messages from \"@/utils/messages\";\r\nimport {ref} from \"vue\";\r\nimport {required} from \"@vuelidate/validators\";\r\nimport {useRouter} from \"vue-router\";\r\nimport useVuelidate from \"@vuelidate/core\";\r\n\r\nexport default {\r\n  name: 'ProfilePage',\r\n  setup () {\r\n    const name = ref('');\r\n\r\n    const v$ = useVuelidate(); // Визначено тут для спрощення\r\n    const submitUserName = async () => {\r\n      if (v$.value.$invalid) {\r\n        v$.value.$touch();\r\n        console.log(\"click to submitUserName\")\r\n        return;\r\n      }\r\n      const formData = {\r\n        name: name.value\r\n      };\r\n      console.log(formData);\r\n    }\r\n    return {\r\n      submitUserName,\r\n      name\r\n    }\r\n  },\r\n  validations () {\r\n    return {\r\n      name: { required },\r\n    }\r\n  },\r\n  methods: {\r\n    //Виводимо ключ get запитом у url шоб вивнести повідомлення logout на екран на сторінці UserLogin\r\n    logout() {\r\n      this.$router.push('/login?message=logout')\r\n    }\r\n  },\r\n}\r\n</script>"],"mappings":";OA0BaA,UAAsC;OAgCtCC,UAAkC;gCAzD7CC,mBAAA,CAIM;EAJDC,KAAK,EAAC;AAAY,I,aACrBD,mBAAA,CAEI,WAFD,eAEH,E;;EAEGC,KAAK,EAAC;AAAiB;;EAGnBA,KAAK,EAAC;AAA8B;gCAUvCD,mBAAA,CAA8B;EAAvBE,GAAG,EAAC;AAAM,GAAC,MAAI;;;EAElBD,KAAK,EAAC;;gCAIZD,mBAAA,CAGS;EAHDC,KAAK,EAAC,WAAW;EAACE,IAAI,EAAC;iBAC7BH,mBAAA,CAA8D;EAAzDI,GAAsC,EAAtCN,UAAsC;EAACO,GAAG,EAAC;iBAChDL,mBAAA,CAA2C;EAArCC,KAAK,EAAC;AAAW,GAAC,cAAY,E;;;EA6BnCA,KAAK,EAAC;AAAgB;gCAEvBD,mBAAA,CAA0D;EAArDI,GAAkC,EAAlCL,UAAkC;EAACM,GAAG,EAAC;;iCAC3CL,mBAAA,CAA+C;EAAzCC,KAAK,EAAC;AAAW,GAAC,kBAAgB;qBADzCK,UAA0D,EACzDC,WAA+C,C;;6DA1DtDC,UAIM,EACNR,mBAAA,CAwDM,OAxDNS,UAwDM,GAvDRC,mBAAA,6BAAgC,EAC5BV,mBAAA,CAqBO;IArBDC,KAAK,EAAC,uBAAuB;IAAEU,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;MACjEd,mBAAA,CAeM,OAfNiB,UAeM,G,gBAdJjB,mBAAA,CAQC;IAPGkB,EAAE,EAAC,MAAM;IACTf,IAAI,EAAC,MAAM;+DACGY,MAAA,CAAAI,IAAI,GAAAC,MAAA;IACjBnB,KAAK,EAAAoB,eAAA;eAAgCC,IAAA,CAAAC,EAAE,CAACJ,IAAI,CAACK,MAAM,IAAIF,IAAA,CAAAC,EAAE,CAACJ,IAAI,CAACM,QAAQ,CAACC,QAAQ;gBAA+BJ,IAAA,CAAAC,EAAE,CAACJ,IAAI,CAACK,MAAM,KAAKF,IAAA,CAAAC,EAAE,CAACJ,IAAI,CAACM,QAAQ,CAACC;;0CADtIX,MAAA,CAAAI,IAAI,E;UAAlB;EAAmB,E,IAMvBQ,UAA8B,EAGpBL,IAAA,CAAAC,EAAE,CAACJ,IAAI,CAACK,MAAM,IAAIF,IAAA,CAAAC,EAAE,CAACJ,IAAI,CAACM,QAAQ,CAACC,QAAQ,I,cAFrDE,mBAAA,CAG0B,SAH1BC,UAG0B,EAAzB,mBAAiB,K,qCAEpBC,UAGS,C,4BAEfpB,mBAAA,8BAAiC,EAC7BqB,UAuBO,EACXrB,mBAAA,wBAA2B,EACvBV,mBAAA,CAKM,OALNgC,UAKM,GAJJhC,mBAAA,CAGI;IAHDiC,IAAI,EAAC,GAAG;IAAEC,OAAK,EAAAtB,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUqB,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAtB,IAAA,CAAM;IAAEb,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}