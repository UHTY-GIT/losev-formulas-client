{"ast":null,"code":"import { inject } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useVuelidate } from \"@vuelidate/core\";\nimport { email, required, minLength } from \"@vuelidate/validators\";\nexport default {\n  name: 'LoginForm',\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      firstName: '',\n      lastName: '',\n      contact: {\n        email: ''\n      }\n    };\n  },\n  validations() {\n    return {\n      firstName: {\n        required\n      },\n      // Matches this.firstName\n      lastName: {\n        required\n      },\n      // Matches this.lastName\n      contact: {\n        email: {\n          required,\n          email\n        } // Matches this.contact.email\n      }\n    };\n  },\n\n  created() {\n    this.backgroundClass = inject('backgroundClass');\n  }\n};","map":{"version":3,"names":["inject","useRouter","useVuelidate","email","required","minLength","name","setup","v$","data","firstName","lastName","contact","validations","created","backgroundClass"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\views\\UserLogin.vue"],"sourcesContent":["<template>\r\n  <div :class=\"backgroundClass\">\r\n    <div class=\"empty-layout\">\r\n      <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\r\n        <div class=\"card-content\">\r\n          <span class=\"card-title\">Увійти Losev Formulas</span>\r\n          <div class=\"input-field\">\r\n<!--            .trim видаляє лишні пробіли\r\n                $dirty валідація буде якщо користувач вже шось роби в у полі\r\n\r\n                class=\"validate\"\r\n-->\r\n            <input\r\n                id=\"email\"\r\n                type=\"text\"\r\n                v-model.trim=\"email\"\r\n                :class=\"{invalid: ($v.email.$dirty && !$v.email.required) || ($v.email.$dirty && !$v.email.email)}\"\r\n            >\r\n            <label for=\"email\">E-mail</label>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-if=\"$v.email.$dirty && !$v.email.required\"\r\n            >Поле E-mail не може бути пустим</small>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-else-if=\"$v.email.$dirty && !$v.email.email\"\r\n            >Введіть коректний E-mail</small>\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                class=\"validate\"\r\n            >\r\n            <label for=\"password\">Пароль</label>\r\n            <small class=\"helper-text invalid\">Password</small>\r\n            <i class=\"toggle-password fas fa-eye-slash\" onclick=\"togglePassword()\"></i>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-action\">\r\n          <div class=\"butt_login\">\r\n            <button\r\n                class=\"btn waves-effect waves-light auth-submit\"\r\n                type=\"submit\"\r\n            >\r\n              Увійти\r\n            </button>\r\n          </div>\r\n\r\n          <p class=\"center under_butt_auth\">\r\n            Немає аккаунту?\r\n            <router-link to=\"/register\">Зареєстурватися</router-link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { inject } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { email, required, minLength } from \"@vuelidate/validators\";\r\n\r\n\r\nexport default {\r\n  name: 'LoginForm',\r\n  setup () {\r\n    return { v$: useVuelidate() }\r\n  },\r\n  data () {\r\n    return {\r\n      firstName: '',\r\n      lastName: '',\r\n      contact: {\r\n        email: ''\r\n      }\r\n    }\r\n  },\r\n  validations () {\r\n    return {\r\n      firstName: { required }, // Matches this.firstName\r\n      lastName: { required }, // Matches this.lastName\r\n      contact: {\r\n        email: { required, email } // Matches this.contact.email\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.backgroundClass = inject('backgroundClass');\r\n  },\r\n}\r\n</script>\r\n"],"mappings":"AA4DA,SAASA,MAAK,QAAS,KAAK;AAC5B,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,YAAW,QAAS,iBAAiB;AAC9C,SAASC,KAAK,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,uBAAuB;AAGlE,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAIA,CAAA,EAAK;IACP,OAAO;MAAEC,EAAE,EAAEN,YAAY,CAAC;IAAE;EAC9B,CAAC;EACDO,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;QACPT,KAAK,EAAE;MACT;IACF;EACF,CAAC;EACDU,WAAUA,CAAA,EAAK;IACb,OAAO;MACLH,SAAS,EAAE;QAAEN;MAAS,CAAC;MAAE;MACzBO,QAAQ,EAAE;QAAEP;MAAS,CAAC;MAAE;MACxBQ,OAAO,EAAE;QACPT,KAAK,EAAE;UAAEC,QAAQ;UAAED;QAAM,EAAE;MAC7B;IACF;EACF,CAAC;;EAEDW,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAc,GAAIf,MAAM,CAAC,iBAAiB,CAAC;EAClD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}