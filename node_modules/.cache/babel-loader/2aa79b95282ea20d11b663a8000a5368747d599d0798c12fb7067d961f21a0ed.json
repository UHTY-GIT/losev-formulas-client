{"ast":null,"code":"import apiService from '@/services/apiService.js';\nexport default {\n  name: \"AllPodcastPage\",\n  data() {\n    return {\n      podcasts: [],\n      loading: false,\n      dropdowns: {\n        name: false,\n        category: false\n      },\n      sortType: 'title',\n      allcategories: [],\n      selectedCategory: 'Всі подкасти',\n      sortDisplayNames: {\n        'title': 'За назвою',\n        'rating': 'За популярністю'\n      }\n    };\n  },\n  methods: {\n    async toggleDropdown(type) {\n      console.log(\"Toggle dropdown called with:\", type);\n      this.dropdowns[type] = !this.dropdowns[type];\n    },\n    // Сортування за рейтингом і назвою\n    sortPodcasts(type) {\n      this.sortType = type;\n      if (type === 'title') {\n        console.log(\"Сортування по тайтл \", type);\n        this.podcasts.sort((a, b) => a.title.localeCompare(b.title));\n      } else if (type === 'rating') {\n        console.log(\"Сортування по рейтингу \", type);\n        this.podcasts.sort((a, b) => b.rating - a.rating); // assuming higher rating is better\n      }\n    },\n\n    // Фільтр по категоріям\n    filterPodcasts(categoryName) {\n      if (categoryName === 'all') {\n        this.podcasts.forEach(p => p.isVisible = true);\n        this.selectedCategory = 'Всі подкасти'; // Оновлюємо selectedCategory\n      } else {\n        this.podcasts.forEach(podcast => {\n          if (podcast.categories[0].name === categoryName) {\n            podcast.isVisible = true;\n          } else {\n            podcast.isVisible = false;\n          }\n        });\n        this.selectedCategory = categoryName; // Оновлюємо selectedCategory\n      }\n    }\n  },\n\n  async created() {\n    this.loading = true;\n\n    // отримання даних всіх подкастів\n    const responseAllPodcast = await apiService.AllPodcastPage();\n    // this.podcasts = responseAllPodcast.data.data;\n    this.podcasts = responseAllPodcast.data.data.map(podcast => ({\n      ...podcast,\n      isVisible: true\n    }));\n    console.log(this.podcasts);\n\n    // Отримання даних всіх категорій\n    const responseCategories = await apiService.allCategories();\n    this.allcategories = responseCategories.data.data;\n    console.log(this.allcategories);\n\n    // Ініціалізація методу сортування\n    this.sortPodcasts(this.sortType);\n  }\n};","map":{"version":3,"names":["apiService","name","data","podcasts","loading","dropdowns","category","sortType","allcategories","selectedCategory","sortDisplayNames","methods","toggleDropdown","type","console","log","sortPodcasts","sort","a","b","title","localeCompare","rating","filterPodcasts","categoryName","forEach","p","isVisible","podcast","categories","created","responseAllPodcast","AllPodcastPage","map","responseCategories","allCategories"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\views\\AllPodcast.vue"],"sourcesContent":["<template>\r\n  <div class=\"page_title\">\r\n    <p>\r\n      Всі подкасти\r\n    </p>\r\n  </div>\r\n  <div class=\"all-podcast-block\">\r\n    <div class=\"dropdown-container\">\r\n      <div class=\"dropdown\">\r\n        <span>Сортування:</span>\r\n        <div class=\"selected-item-name\" @click=\"toggleDropdown('name')\">\r\n          <span>{{ sortDisplayNames[sortType] }}</span>\r\n          <a :class=\"['arrow-icon', { 'open': dropdowns.name }]\">\r\n            <span class=\"left-bar\"></span>\r\n            <span class=\"right-bar\"></span>\r\n\t\t\t\t\t</a>\r\n        </div>\r\n        <div class=\"dropdown-content\" v-show=\"dropdowns.name\">\r\n          <a href=\"#\" @click=\"sortPodcasts('title')\">За назвою</a>\r\n          <a href=\"#\" @click=\"sortPodcasts('rating')\">За популярністю</a>\r\n        </div>\r\n      </div>\r\n      <div class=\"dropdown\">\r\n        <span>Фільтр:</span>\r\n        <div class=\"selected-item-category\" @click=\"toggleDropdown('category')\">\r\n          <span class=\"selected-item\">{{ selectedCategory }}</span>\r\n          <a :class=\"['arrow-icon', { 'open': dropdowns.category }]\">\r\n            <span class=\"left-bar\"></span>\r\n            <span class=\"right-bar\"></span>\r\n          </a>\r\n        </div>\r\n        <div class=\"dropdown-content dropdown-category\" v-show=\"dropdowns.category\">\r\n          <a href=\"#\" @click=\"filterPodcasts('all')\">Всі подкасти</a>\r\n          <a\r\n              v-for=\"category in allcategories\"\r\n              :key=\"category.name\"\r\n              href=\"#\"\r\n              @click=\"filterPodcasts(category.name)\"\r\n          >\r\n            {{ category.name }}\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div>\r\n        <a>\r\n          Самознавство\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <a>\r\n          Самознавство\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"block_content_podcast\">\r\n      <div\r\n          v-for=\"podcast in podcasts\"\r\n          :key=\"podcast.id\"\r\n          :class=\"['podcast', `id_${podcast.id}`]\"\r\n          :style=\"{ backgroundImage: `url(http://dev-api.losev-formulas.com${podcast.image_url})`, backgroundRepeat: 'no-repeat', backgroundPosition: 'center' }\"\r\n          v-show=\"podcast.isVisible\"\r\n      >\r\n        <div class=\"positions_in_block\">\r\n          <div class=\"upper_tittle\">\r\n            <div class=\"context\">\r\n              <button class=\"play-button\" aria-label=\"Play podcast\">\r\n                <svg class=\"play-icon\" xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 512 512\">\r\n                  <path class=\"play-path\" d=\"M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM188.3 147.1c-7.6 4.2-12.3 12.3-12.3 20.9V344c0 8.7 4.7 16.7 12.3 20.9s16.8 4.1 24.3-.5l144-88c7.1-4.4 11.5-12.1 11.5-20.5s-4.4-16.1-11.5-20.5l-144-88c-7.4-4.5-16.7-4.7-24.3-.5z\"/>\r\n                </svg>\r\n              </button>\r\n              <div class=\"info_podcast\">\r\n                  <span class=\"title_podcast\">\r\n                    {{ podcast.title }}\r\n                  </span>\r\n                <span class=\"author_podcast\">\r\n                    {{ podcast.description }}\r\n                  </span>\r\n              </div>\r\n            </div>\r\n            <span class=\"time_podcast\">\r\n                55:15\r\n              </span>\r\n          </div>\r\n          <div class=\"under_title\">\r\n            <div class=\"rating_and_categories\">\r\n              <div class=\"podcast-rating\">3</div>\r\n              <span class=\"categories_podcast\">{{ podcast.categories[0].name }}</span>\r\n            </div>\r\n            <button class=\"heart-button\" aria-label=\"favorite\"></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport apiService from '@/services/apiService.js';\r\n\r\nexport default {\r\n  name: \"AllPodcastPage\",\r\n  data() {\r\n    return {\r\n      podcasts: [],\r\n      loading: false,\r\n      dropdowns: {\r\n        name: false,\r\n        category: false\r\n      },\r\n      sortType: 'title',\r\n      allcategories: [],\r\n      selectedCategory: 'Всі подкасти',\r\n      sortDisplayNames: {\r\n        'title': 'За назвою',\r\n        'rating': 'За популярністю'\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async toggleDropdown(type) {\r\n      console.log(\"Toggle dropdown called with:\", type);\r\n      this.dropdowns[type] = !this.dropdowns[type];\r\n    },\r\n    // Сортування за рейтингом і назвою\r\n    sortPodcasts(type) {\r\n      this.sortType = type;\r\n      if (type === 'title') {\r\n        console.log(\"Сортування по тайтл \", type);\r\n        this.podcasts.sort((a, b) => a.title.localeCompare(b.title));\r\n      } else if (type === 'rating') {\r\n        console.log(\"Сортування по рейтингу \", type);\r\n        this.podcasts.sort((a, b) => b.rating - a.rating);  // assuming higher rating is better\r\n      }\r\n    },\r\n    // Фільтр по категоріям\r\n    filterPodcasts(categoryName) {\r\n      if (categoryName === 'all') {\r\n        this.podcasts.forEach(p => p.isVisible = true);\r\n        this.selectedCategory = 'Всі подкасти';  // Оновлюємо selectedCategory\r\n      } else {\r\n        this.podcasts.forEach(podcast => {\r\n          if (podcast.categories[0].name === categoryName) {\r\n            podcast.isVisible = true;\r\n          } else {\r\n            podcast.isVisible = false;\r\n          }\r\n        });\r\n        this.selectedCategory = categoryName;  // Оновлюємо selectedCategory\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    this.loading = true;\r\n\r\n    // отримання даних всіх подкастів\r\n    const responseAllPodcast = await apiService.AllPodcastPage();\r\n    // this.podcasts = responseAllPodcast.data.data;\r\n    this.podcasts = responseAllPodcast.data.data.map(podcast => ({ ...podcast, isVisible: true }));\r\n\r\n    console.log(this.podcasts);\r\n\r\n    // Отримання даних всіх категорій\r\n    const responseCategories = await apiService.allCategories();\r\n    this.allcategories = responseCategories.data.data;\r\n\r\n    console.log(this.allcategories);\r\n\r\n    // Ініціалізація методу сортування\r\n    this.sortPodcasts(this.sortType);\r\n  }\r\n}\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}