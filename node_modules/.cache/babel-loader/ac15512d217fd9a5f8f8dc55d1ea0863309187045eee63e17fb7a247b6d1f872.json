{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport useVuelidate from '@vuelidate/core';\nimport { required, minLength } from '@vuelidate/validators';\nexport default {\n  name: 'loginPage',\n  setup() {\n    const email = ref('');\n    const password = ref('');\n    const rules = {\n      email: {\n        email,\n        required\n      },\n      password: {\n        required,\n        minLength: minLength(6)\n      }\n    };\n    const v$ = useVuelidate(rules, {\n      email,\n      password\n    });\n    const submitHandler = () => {\n      if (v$.value.$invalid) {\n        v$.value.$touch();\n        return;\n      }\n      const formData = {\n        email: email.value,\n        password: password.value\n      };\n      console.log(formData);\n      this.$router.push('/');\n    };\n    return {\n      email,\n      password,\n      v$,\n      submitHandler\n    };\n  }\n};","map":{"version":3,"names":["ref","useVuelidate","required","minLength","name","setup","email","password","rules","v$","submitHandler","value","$invalid","$touch","formData","console","log","$router","push"],"sources":["C:\\Users\\Denys\\WebstormProjects\\losev-formulas-client\\src\\views\\UserLogin.vue"],"sourcesContent":["<template>\r\n  <div :class=\"backgroundClass\">\r\n    <div class=\"empty-layout\">\r\n      <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\r\n        <div class=\"card-content\">\r\n          <span class=\"card-title\">Увійти Losev Formulas</span>\r\n          <div class=\"input-field\">\r\n<!--            .trim видаляє лишні пробіли\r\n                $dirty валідація буде якщо користувач вже шось роби в у полі\r\n\r\n                class=\"validate\"\r\n-->\r\n            <input\r\n                id=\"email\"\r\n                type=\"text\"\r\n                v-model.trim=\"email\"\r\n                :class=\"{invalid: (v$.email.$dirty && !v$.email.required) || (v$.email.$dirty && !v$.email.email)}\"\r\n            >\r\n            <label for=\"email\">E-mail</label>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-if=\"v$.email.$dirty && !v$.email.required\"\r\n            >Поле E-mail не може бути пустим</small>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-else-if=\"v$.email.$dirty && !v$.email.email\"\r\n            >Введіть коректний E-mail</small>\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <input\r\n                id=\"password\"\r\n                :type=\"isPasswordVisible ? 'text' : 'password'\"\r\n                v-model.trim=\"password\"\r\n                v-bind:class=\"{invalid: (v$.password.$dirty && !v$.password.required) || (v$.password.$dirty && !v$.password.minLength)}\"\r\n            >\r\n            <label for=\"password\">Пароль</label>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-if=\"v$.password.$dirty && !v$.password.required\"\r\n            >Введіть пароль</small>\r\n            <small\r\n                class=\"helper-text invalid\"\r\n                v-else-if=\"v$.password.$dirty && !v$.password.minLength\"\r\n            >Пароль повинен бути {{ v$.password.$params.minLength.min }} символів. Зараз він {{password.length}}</small>\r\n            <i class=\"toggle-password\" :class=\"passwordIconClass\" @click=\"togglePassword\"></i>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-action\">\r\n          <div class=\"butt_login\">\r\n            <button\r\n                class=\"btn waves-effect waves-light auth-submit\"\r\n                type=\"submit\"\r\n            >\r\n              Увійти\r\n            </button>\r\n          </div>\r\n\r\n          <p class=\"center under_butt_auth\">\r\n            Немає аккаунту?\r\n            <router-link to=\"/register\">Зареєстурватися</router-link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<!--<script>-->\r\n<!--import { ref } from 'vue';-->\r\n<!--import { useVuelidate } from '@vuelidate/core'-->\r\n<!--import { required, email, minLength } from '@vuelidate/validators'-->\r\n<!--import {inject} from \"vue\";-->\r\n<!--import {useRouter} from \"vue-router\";-->\r\n\r\n<!--export default {-->\r\n<!--  name: 'loginPage',-->\r\n<!--  data () {-->\r\n<!--    return {-->\r\n<!--      backgroundClass: null,-->\r\n<!--      email: '',-->\r\n<!--      password: ''-->\r\n<!--    }-->\r\n<!--  },-->\r\n<!--  setup () {-->\r\n<!--    const router = useRouter(); // Переміщено сюди з submitHandler-->\r\n<!--    const v$ = useVuelidate(); // Визначено тут для спрощення-->\r\n<!--    const submitHandler = () => {-->\r\n<!--      console.log(\"Потрогано \" + v$.value.email.$dirty)-->\r\n<!--      console.log(\"не Вимагається \" + !v$.value.password.required)-->\r\n<!--      console.log(\"потрогано і введено емейл \" + v$.value.email.$dirty && !v$.value.email.email)-->\r\n<!--      // console.log(v$.value.password)-->\r\n<!--      // console.log(v$.value.email)-->\r\n<!--      if (v$.value.$invalid) {-->\r\n<!--        v$.value.$touch();-->\r\n<!--        console.log(\"click to submitHandler\")-->\r\n<!--        return;-->\r\n<!--      }-->\r\n\r\n<!--      router.push('/');-->\r\n<!--    }-->\r\n\r\n<!--    // Реактивний стан для перевірки видимості пароля-->\r\n<!--    const isPasswordVisible = ref(false);-->\r\n\r\n<!--    const passwordIconClass = ref('fas fa-eye-slash'); // Додано реактивний об'єкт для зміни іконки-->\r\n\r\n<!--    // Функція переключення видимості пароля-->\r\n<!--    const togglePassword = () => {-->\r\n<!--      isPasswordVisible.value = !isPasswordVisible.value;-->\r\n<!--      if (isPasswordVisible.value) {-->\r\n<!--        passwordIconClass.value = 'fas fa-eye';-->\r\n<!--      } else {-->\r\n<!--        passwordIconClass.value = 'fas fa-eye-slash';-->\r\n<!--      }-->\r\n<!--    }-->\r\n\r\n<!--    return {-->\r\n<!--      v$,-->\r\n<!--      submitHandler, // Повертаємо функцію з setup-->\r\n<!--      isPasswordVisible,-->\r\n<!--      togglePassword,-->\r\n<!--      passwordIconClass-->\r\n<!--    }-->\r\n<!--  },-->\r\n<!--  validations () {-->\r\n<!--    return {-->\r\n<!--      email: { required, email },-->\r\n<!--      password: { required, minLength: minLength(7) } // припустимо, мінімальна довжина пароля - 6 символів-->\r\n<!--    }-->\r\n<!--  },-->\r\n<!--  created() {-->\r\n<!--    this.backgroundClass = inject('backgroundClass');-->\r\n<!--  },-->\r\n<!--}-->\r\n\r\n<!--</script>-->\r\n<script>\r\nimport { ref } from 'vue';\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required, minLength } from '@vuelidate/validators';\r\n\r\nexport default {\r\n  name: 'loginPage',\r\n  setup() {\r\n    const email = ref('');\r\n    const password = ref('');\r\n\r\n    const rules = {\r\n      email: { email, required },\r\n      password: { required, minLength: minLength(6) }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, { email, password });\r\n\r\n    const submitHandler = () => {\r\n      if (v$.value.$invalid) {\r\n        v$.value.$touch();\r\n        return;\r\n      }\r\n\r\n      const formData = {\r\n        email: email.value,\r\n        password: password.value\r\n      };\r\n\r\n      console.log(formData);\r\n      this.$router.push('/');\r\n    };\r\n\r\n    return {\r\n      email,\r\n      password,\r\n      v$,\r\n      submitHandler\r\n    };\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AA0IA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,YAAW,MAAO,iBAAiB;AAC1C,SAASC,QAAQ,EAAEC,SAAQ,QAAS,uBAAuB;AAE3D,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIN,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMO,QAAO,GAAIP,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMQ,KAAI,GAAI;MACZF,KAAK,EAAE;QAAEA,KAAK;QAAEJ;MAAS,CAAC;MAC1BK,QAAQ,EAAE;QAAEL,QAAQ;QAAEC,SAAS,EAAEA,SAAS,CAAC,CAAC;MAAE;IAChD,CAAC;IAED,MAAMM,EAAC,GAAIR,YAAY,CAACO,KAAK,EAAE;MAAEF,KAAK;MAAEC;IAAS,CAAC,CAAC;IAEnD,MAAMG,aAAY,GAAIA,CAAA,KAAM;MAC1B,IAAID,EAAE,CAACE,KAAK,CAACC,QAAQ,EAAE;QACrBH,EAAE,CAACE,KAAK,CAACE,MAAM,CAAC,CAAC;QACjB;MACF;MAEA,MAAMC,QAAO,GAAI;QACfR,KAAK,EAAEA,KAAK,CAACK,KAAK;QAClBJ,QAAQ,EAAEA,QAAQ,CAACI;MACrB,CAAC;MAEDI,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB,CAAC;IAED,OAAO;MACLZ,KAAK;MACLC,QAAQ;MACRE,EAAE;MACFC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}